{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ContactPublisherModalStyles from '../public/styles/modules/components/contactpublishermodalstyles.module.css';\nimport Link from 'next/link';\n\nclass ContactPublisherModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_processSubmission\", () => {\n      event.preventDefault();\n      var firstNameField, lastNameField, emailAddressField, messageField, url, json, button, component;\n      component = this;\n      firstNameField = document.querySelector('input[name=\"first_name\"]');\n      lastNameField = document.querySelector('input[name=\"last_name\"]');\n      emailAddressField = document.querySelector('input[name=\"email_address\"]');\n      messageField = document.querySelector('textarea[name=\"message\"]');\n\n      if (!firstNameField.checkValidity()) {\n        firstNameField.classList.add('invalid');\n        return false;\n      } else {\n        firstNameField.classList.remove('invalid');\n      }\n\n      if (!lastNameField.checkValidity()) {\n        lastNameField.classList.add('invalid');\n        return false;\n      } else {\n        lastNameField.classList.remove('invalid');\n      }\n\n      if (!emailAddressField.checkValidity()) {\n        emailAddressField.classList.add('invalid');\n        return false;\n      } else {\n        emailAddressField.classList.remove('invalid');\n      }\n\n      if (!messageField.checkValidity()) {\n        messageField.classList.add('invalid');\n        return false;\n      } else {\n        messageField.classList.remove('invalid');\n      }\n\n      button = document.querySelector('.js-submit');\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/publisher-contact';\n      json = JSON.stringify({\n        \"first_name\": this.state.first_name,\n        \"last_name\": this.state.last_name,\n        \"email_address\": this.state.email_address,\n        \"organization\": this.state.organization,\n        \"phone_number\": this.state.phone_number,\n        \"message\": this.state.message,\n        \"whitepaper_id\": this.props.whitepaper_id\n      });\n      button.disabled = true;\n      component.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setTimeout(function (e) {\n          button.disabled = false;\n          let flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            component.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          component.setState({\n            first_name: '',\n            last_name: '',\n            email_address: '',\n            phone_number: '',\n            organization: '',\n            message: '',\n            working: false,\n            confirmation: 'Your message has been sent.'\n          }, () => {// Redirect to profile\n            //Router.push('/dashboard')\n          });\n        }, 1000);\n      });\n    });\n\n    _defineProperty(this, \"_handleEscape\", e => {\n      if (e.which == 27) {\n        this.props.toggle();\n      }\n    });\n\n    _defineProperty(this, \"_handleClick\", e => {\n      e.preventDefault();\n\n      if (e.target.hasAttribute('data-close-modal')) {\n        this.props.toggle();\n      }\n    });\n\n    _defineProperty(this, \"_renderModalClass\", () => {\n      const {\n        open\n      } = this.props;\n\n      if (open) {\n        return `${ContactPublisherModalStyles.wrap} ${ContactPublisherModalStyles.open}`;\n      } else {\n        return `${ContactPublisherModalStyles.wrap}`;\n      }\n    });\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      phone_number: '',\n      message: '',\n      organization: '',\n      message: '',\n      confirmation: false,\n      error: '',\n      working: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let name = event.target.getAttribute('name');\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      open\n    } = this.props;\n    const {\n      working\n    } = this.state;\n    let html = document.querySelector('html');\n\n    if (open) {\n      window.addEventListener('keydown', this._handleEscape);\n      window.addEventListener('click', this._handleClick);\n      html.classList.add('active-modal');\n    } else {\n      window.removeEventListener('keydown', this._handleEscape);\n      window.removeEventListener('click', this._handleClick);\n      html.classList.remove('active-modal');\n    }\n\n    if (working) {\n      html.classList.add('working');\n    } else {\n      html.classList.remove('working');\n    }\n  }\n\n  _renderForm() {\n    if (this.state.confirmation == false) {\n      return __jsx(\"form\", null, __jsx(\"label\", null, \"First Name\", __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"first_name\",\n        value: this.state.first_name,\n        type: \"text\",\n        placeholder: \"First Name\",\n        required: true\n      })), __jsx(\"label\", null, \"Last Name\", __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"last_name\",\n        value: this.state.last_name,\n        type: \"text\",\n        placeholder: \"Last Name\",\n        required: true\n      })), __jsx(\"label\", null, \"Email\", __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"email_address\",\n        value: this.state.email_address,\n        type: \"email\",\n        placeholder: \"Email Address\",\n        required: true\n      })), __jsx(\"label\", null, \"Phone\", __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"phone_number\",\n        value: this.state.phone_number,\n        type: \"tel\",\n        placeholder: \"e.g. 323-555-0124\"\n      })), __jsx(\"label\", null, \"Agency/Organization\", __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"organization\",\n        value: this.state.organization,\n        type: \"text\",\n        placeholder: \"Organization name\",\n        required: true\n      })), __jsx(\"label\", null, \"Message\", __jsx(\"textarea\", {\n        onChange: this.handleChange,\n        value: this.state.message,\n        name: \"message\",\n        placeholder: \"Type your message...\",\n        rows: \"5\"\n      })), __jsx(\"div\", {\n        className: `row ${ContactPublisherModalStyles.signin}`\n      }, __jsx(\"div\", {\n        className: \"small-12 columns text-center\"\n      }, __jsx(\"input\", {\n        onClick: this._processSubmission,\n        type: \"submit\",\n        className: \"js-submit button\",\n        value: \"Send\"\n      }))));\n    } else {\n      return __jsx(\"h5\", {\n        className: \"text-center\"\n      }, this.state.confirmation);\n    }\n  }\n\n  render() {\n    const {\n      email,\n      pass,\n      error\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: this._renderModalClass()\n    }, __jsx(\"div\", {\n      className: `row ${ContactPublisherModalStyles.header}`\n    }, __jsx(\"div\", {\n      className: \"small-6 columns\"\n    }, __jsx(\"img\", {\n      className: ContactPublisherModalStyles.logo,\n      src: \"/images/logo.svg\",\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"small-6 columns text-right\"\n    }, __jsx(\"button\", {\n      className: ContactPublisherModalStyles.close,\n      onClick: e => {\n        this.props.toggle();\n      }\n    }, __jsx(\"img\", {\n      src: \"/images/close.svg\",\n      alt: \"\"\n    })))), __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(\"div\", {\n      className: \"small-12 columns\"\n    }, __jsx(\"h2\", null, \"Contact Publisher\"), __jsx(\"img\", {\n      className: ContactPublisherModalStyles.hr,\n      src: \"/images/sep.svg\",\n      alt: \"\"\n    }))), __jsx(\"div\", {\n      className: `${ContactPublisherModalStyles.form}`\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"small-12 columns\"\n    }, this._renderForm())))));\n  }\n\n}\n\nexport default ContactPublisherModal;","map":null,"metadata":{},"sourceType":"module"}