{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nconst apiURL = 'https://gwpadmin.codewrangler.io/api/gwp/v1';\nexport default class WordpressService {\n  async fetchWhitepapers(items, offset, topics = [], tags = [], format = '', agencies = [], search = '', start_date = '', end_date = '', sort_by = 'relevance', user_id = '', organization_id = '') {\n    const res = await fetch(`${apiURL}/whitepapers/?items=${items}&offset=${offset}&topics=${topics}&tags=${tags}&format=${format}&agencies=${agencies}&s=${search}&start_date=${start_date}&end_date=${end_date}&sort_by=${sort_by}&user_id=${user_id}&organization_id=${organization_id}`);\n    const whitepapers = await res.json();\n    return whitepapers;\n  }\n\n  async fetchSavedSearch(id) {\n    const res = await fetch(`${apiURL}/saved-search/${id}`);\n    const search = await res.json();\n    return search;\n  }\n\n  async fetchSavedSearches(user_id, access_token) {\n    const url = `${apiURL}/saved-searches/`;\n    const json = JSON.stringify({\n      \"access_token\": access_token,\n      \"user_id\": user_id\n    });\n    const res = await fetch(url, {\n      method: 'post',\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const saved_searches = await res.json();\n    return saved_searches;\n  }\n\n  async fetchWhitepaper(slug) {\n    const res = await fetch(`${apiURL}/whitepapers/${slug}`);\n    const whitepaper = await res.json();\n    return whitepaper;\n  }\n\n  async fetchPosts(items, offset, search = '') {\n    const res = await fetch(`${apiURL}/posts/?items=${items}&offset=${offset}&s=${search}`);\n    const posts = await res.json();\n    return posts;\n  }\n\n  async fetchSlides() {\n    const res = await fetch(`${apiURL}/slides`);\n    const slides = await res.json();\n    return slides;\n  }\n\n  async fetchPost(slug) {\n    const res = await fetch(`${apiURL}/posts/${slug}`);\n    const post = await res.json();\n    return post;\n  }\n\n  async fetchPage(slug) {\n    const res = await fetch(`${apiURL}/pages/${slug}`);\n    const page = await res.json();\n    return page;\n  }\n\n  async fetchFormats() {\n    const res = await fetch(`${apiURL}/formats/`);\n    const formats = await res.json();\n    return formats;\n  }\n\n  async fetchTopics() {\n    const res = await fetch(`${apiURL}/topics/`);\n    const topics = await res.json();\n    return topics;\n  }\n\n  async fetchTopic(slug) {\n    const res = await fetch(`${apiURL}/topic/${slug}`);\n    const topic = await res.json();\n    return topic;\n  }\n\n  async fetchTags() {\n    const res = await fetch(`${apiURL}/tags/`);\n    const tags = await res.json();\n    return tags;\n  }\n\n  async fetchStats() {\n    const res = await fetch(`${apiURL}/fetch-stats/`);\n    const stats = await res.json();\n    return stats;\n  }\n\n  async fetchTeam() {\n    const res = await fetch(`${apiURL}/team/`);\n    const team = await res.json();\n    return team;\n  }\n\n  async fetchAgencies(parent) {\n    let res;\n\n    if (parent == '') {\n      res = await fetch(`${apiURL}/agencies/?orderby=name`);\n    } else {\n      res = await fetch(`${apiURL}/agencies/?parent=${parent}`);\n    }\n\n    const agencies = await res.json();\n    return agencies;\n  }\n\n  async searchOrganizations(search, items = 10) {\n    if (search == '') {\n      return [];\n    }\n\n    const res = await fetch(`${apiURL}/organizations/?search=${search}&items=${items}`);\n    const orgs = await res.json();\n    return orgs;\n  }\n\n  async fetchOrganization(id) {\n    if (id == '') {\n      return false;\n    }\n\n    const res = await fetch(`${apiURL}/organizations/${id}`);\n    const org = await res.json();\n    return org;\n  }\n\n  async fetchFavorites(access_token, items, offset) {\n    const url = `${apiURL}/favorites/`;\n    const json = JSON.stringify({\n      \"access_token\": access_token,\n      \"items\": items,\n      \"offset\": offset\n    });\n    const res = await fetch(url, {\n      method: 'post',\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const whitepapers = await res.json();\n    return whitepapers;\n  }\n\n  async fetchOrganizationMembers(access_token) {\n    const url = `${apiURL}/organization-members/`;\n    const json = JSON.stringify({\n      \"access_token\": access_token\n    });\n    const res = await fetch(url, {\n      method: 'post',\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const members = await res.json();\n    return members;\n  }\n\n  async checkFavorite(id, token) {\n    //\tconst res = await fetch(`${apiURL}/is-favorite/`)\n    const url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/is-favorite';\n    const json = JSON.stringify({\n      \"ID\": id,\n      \"access_token\": token\n    });\n    const res = await fetch(url, {\n      method: 'post',\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const r = await res.json();\n    return r;\n  }\n\n  async getUser(token) {\n    if (!token) {\n      return false;\n    }\n\n    const url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/user';\n    const json = JSON.stringify({\n      \"access_token\": token\n    });\n    const res = await fetch(url, {\n      method: 'post',\n      body: json,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const r = await res.json();\n    return r;\n  } // async fetchHomeSlides() {\n  // \tconst res = await fetch(`${apiURL}/home-slides?items=4`)\n  // \tconst slides = await res.json()\n  //\n  // \treturn slides\n  // }\n\n\n}","map":{"version":3,"sources":["/home/edward/Projects/gov/gwp-test/services/wordpress.js"],"names":["fetch","apiURL","WordpressService","fetchWhitepapers","items","offset","topics","tags","format","agencies","search","start_date","end_date","sort_by","user_id","organization_id","res","whitepapers","json","fetchSavedSearch","id","fetchSavedSearches","access_token","url","JSON","stringify","method","body","headers","saved_searches","fetchWhitepaper","slug","whitepaper","fetchPosts","posts","fetchSlides","slides","fetchPost","post","fetchPage","page","fetchFormats","formats","fetchTopics","fetchTopic","topic","fetchTags","fetchStats","stats","fetchTeam","team","fetchAgencies","parent","searchOrganizations","orgs","fetchOrganization","org","fetchFavorites","fetchOrganizationMembers","members","checkFavorite","token","r","getUser"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst apiURL = 'https://gwpadmin.codewrangler.io/api/gwp/v1';\n\nexport default class WordpressService {\n\n\tasync fetchWhitepapers(\n\t\t\titems,\n\t\t\toffset,\n\t\t\ttopics = [],\n\t\t\ttags = [],\n\t\t\tformat = '',\n\t\t\tagencies = [],\n\t\t\tsearch = '',\n\t\t\tstart_date = '',\n\t\t\tend_date = '',\n\t\t\tsort_by = 'relevance',\n\t\t\tuser_id = '',\n\t\t\torganization_id = ''\n\t\t)\n\t{\n\t\tconst res = await fetch(`${apiURL}/whitepapers/?items=${items}&offset=${offset}&topics=${topics}&tags=${tags}&format=${format}&agencies=${agencies}&s=${search}&start_date=${start_date}&end_date=${end_date}&sort_by=${sort_by}&user_id=${user_id}&organization_id=${organization_id}`)\n\t\tconst whitepapers = await res.json()\n\n\t\treturn whitepapers;\n\t}\n\n\tasync fetchSavedSearch(id) {\n\t\tconst res = await fetch(`${apiURL}/saved-search/${id}`)\n\t\tconst search = await res.json()\n\t\treturn search;\n\t}\n\n\tasync fetchSavedSearches( user_id, access_token ) {\n\t\tconst url = `${apiURL}/saved-searches/`\n\n\t\tconst json = JSON.stringify({\n\t\t\t\"access_token\": access_token,\n\t\t\t\"user_id\": user_id,\n\t\t});\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t});\n\n\t\tconst saved_searches = await res.json()\n\n\t\treturn saved_searches;\n\t}\n\n\tasync fetchWhitepaper(slug) {\n\t\tconst res = await fetch(`${apiURL}/whitepapers/${slug}`)\n\t\tconst whitepaper = await res.json()\n\t\treturn whitepaper;\n\t}\n\n\tasync fetchPosts(items,offset,search = '') {\n\t\tconst res = await fetch(`${apiURL}/posts/?items=${items}&offset=${offset}&s=${search}`)\n\t\tconst posts = await res.json()\n\n\t\treturn posts;\n\t}\n\n\tasync fetchSlides() {\n\t\tconst res = await fetch(`${apiURL}/slides`)\n\t\tconst slides = await res.json()\n\n\t\treturn slides;\n\t}\n\n\tasync fetchPost(slug) {\n\t\tconst res = await fetch(`${apiURL}/posts/${slug}`)\n\t\tconst post = await res.json()\n\t\treturn post;\n\t}\n\n\tasync fetchPage(slug) {\n\t\tconst res = await fetch(`${apiURL}/pages/${slug}`)\n\t\tconst page = await res.json()\n\t\treturn page;\n\t}\n\n\tasync fetchFormats() {\n\t\tconst res = await fetch(`${apiURL}/formats/`)\n\t\tconst formats = await res.json()\n\n\t\treturn formats;\n\t}\n\n\tasync fetchTopics() {\n\t\tconst res = await fetch(`${apiURL}/topics/`)\n\t\tconst topics = await res.json()\n\n\t\treturn topics;\n\t}\n\n\tasync fetchTopic(slug) {\n\t\tconst res = await fetch(`${apiURL}/topic/${slug}`)\n\t\tconst topic = await res.json()\n\t\treturn topic;\n\t}\n\n\tasync fetchTags() {\n\t\tconst res = await fetch(`${apiURL}/tags/`)\n\t\tconst tags = await res.json()\n\n\t\treturn tags;\n\t}\n\n\tasync fetchStats() {\n\t\tconst res = await fetch(`${apiURL}/fetch-stats/`)\n\t\tconst stats = await res.json()\n\n\t\treturn stats;\n\t}\n\n\tasync fetchTeam() {\n\t\tconst res = await fetch(`${apiURL}/team/`)\n\t\tconst team = await res.json()\n\n\t\treturn team;\n\t}\n\n\tasync fetchAgencies(parent) {\n\t\tlet res;\n\t\tif( parent == '' ) {\n\t\t\tres = await fetch(`${apiURL}/agencies/?orderby=name`)\n\t\t} else {\n\t\t\tres = await fetch(`${apiURL}/agencies/?parent=${parent}`)\n\t\t}\n\t\tconst agencies = await res.json()\n\n\t\treturn agencies;\n\t}\n\n\tasync searchOrganizations(search, items = 10) {\n\t\tif( search == '' ) {\n\t\t\treturn []\n\t\t}\n\t\tconst res = await fetch(`${apiURL}/organizations/?search=${search}&items=${items}`)\n\t\tconst orgs = await res.json()\n\n\t\treturn orgs;\n\t}\n\n\tasync fetchOrganization(id) {\n\t\tif( id == '' ) {\n\t\t\treturn false;\n\t\t}\n\t\tconst res = await fetch(`${apiURL}/organizations/${id}`)\n\t\tconst org = await res.json()\n\n\t\treturn org;\n\t}\n\n\tasync fetchFavorites(access_token,items,offset) {\n\n\t\tconst url = `${apiURL}/favorites/`\n\n\t\tconst json = JSON.stringify({\n\t\t\t\"access_token\": access_token,\n\t\t\t\"items\": items,\n\t\t\t\"offset\": offset\n\t\t});\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t});\n\n\t\tconst whitepapers = await res.json()\n\n\t\treturn whitepapers;\n\t}\n\n\tasync fetchOrganizationMembers(access_token) {\n\n\t\tconst url = `${apiURL}/organization-members/`\n\t\tconst json = JSON.stringify({\n\t\t\t\"access_token\": access_token,\n\t\t});\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t});\n\n\t\tconst members = await res.json()\n\n\t\treturn members;\n\t}\n\n\tasync checkFavorite(id,token) {\n\t//\tconst res = await fetch(`${apiURL}/is-favorite/`)\n\t\tconst url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/is-favorite';\n\t\tconst json = JSON.stringify({\n\t\t\t\"ID\": id,\n\t\t\t\"access_token\": token\n\t\t});\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t});\n\n\t\tconst r = await res.json()\n\n\t\treturn r;\n\t}\n\n\tasync getUser(token) {\n\n\t\tif( !token ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/user';\n\t\tconst json = JSON.stringify({\n\t\t\t\"access_token\": token\n\t\t});\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t});\n\n\t\tconst r = await res.json()\n\n\t\treturn r;\n\t}\n\n\t// async fetchHomeSlides() {\n\t// \tconst res = await fetch(`${apiURL}/home-slides?items=4`)\n\t// \tconst slides = await res.json()\n\t//\n\t// \treturn slides\n\t// }\n\n}\n"]},"metadata":{},"sourceType":"module"}