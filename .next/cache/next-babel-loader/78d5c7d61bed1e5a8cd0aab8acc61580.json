{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport contactFormStyles from '../public/styles/modules/components/contactform.module.css';\nimport Link from 'next/link';\n\nvar NewsletterForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewsletterForm, _React$Component);\n\n  var _super = _createSuper(NewsletterForm);\n\n  function NewsletterForm(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, NewsletterForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_processSubmission\", function () {\n      event.preventDefault();\n      var firstNameField, lastNameField, emailAddressField, url, json, button, component;\n      component = _assertThisInitialized(_this);\n      firstNameField = document.querySelector('input[name=\"first_name\"]');\n      lastNameField = document.querySelector('input[name=\"last_name\"]');\n      emailAddressField = document.querySelector('input[name=\"email_address\"]');\n\n      if (!firstNameField.checkValidity()) {\n        firstNameField.classList.add('invalid');\n        return false;\n      } else {\n        firstNameField.classList.remove('invalid');\n      }\n\n      if (!lastNameField.checkValidity()) {\n        lastNameField.classList.add('invalid');\n        return false;\n      } else {\n        lastNameField.classList.remove('invalid');\n      }\n\n      if (!emailAddressField.checkValidity()) {\n        emailAddressField.classList.add('invalid');\n        return false;\n      } else {\n        emailAddressField.classList.remove('invalid');\n      }\n\n      button = document.querySelector('.js-submit');\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/newsletter-subscription';\n      json = JSON.stringify({\n        \"first_name\": _this.state.first_name,\n        \"last_name\": _this.state.last_name,\n        \"email_address\": _this.state.email_address\n      });\n      button.disabled = true;\n      component.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setTimeout(function (e) {\n          button.disabled = false;\n          var flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            component.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          component.setState({\n            first_name: '',\n            last_name: '',\n            email_address: '',\n            working: false,\n            confirmation: 'Your request has been sent.'\n          }, function () {// Redirect to profile\n            //Router.push('/dashboard')\n          });\n        }, 1000);\n      });\n    });\n\n    _this.state = (_this$state = {\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      phone_number: '',\n      message: '',\n      organization: ''\n    }, _defineProperty(_this$state, \"message\", ''), _defineProperty(_this$state, \"working\", false), _defineProperty(_this$state, \"confirmation\", false), _this$state);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewsletterForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var working = this.state.working;\n      var html = document.querySelector('html');\n\n      if (working) {\n        html.classList.add('working');\n      } else {\n        html.classList.remove('working');\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.getAttribute('name');\n      this.setState(_defineProperty({}, name, event.target.value), function () {});\n    }\n  }, {\n    key: \"_renderForm\",\n    value: function _renderForm() {\n      if (this.state.confirmation == false) {\n        return __jsx(\"form\", null, __jsx(\"label\", null, \"First Name\", __jsx(\"input\", {\n          onChange: this.handleChange,\n          name: \"first_name\",\n          value: this.state.first_name,\n          type: \"text\",\n          placeholder: \"First Name\",\n          required: true\n        })), __jsx(\"label\", null, \"Last Name\", __jsx(\"input\", {\n          onChange: this.handleChange,\n          name: \"last_name\",\n          value: this.state.last_name,\n          type: \"text\",\n          placeholder: \"Last Name\",\n          required: true\n        })), __jsx(\"label\", null, \"Email\", __jsx(\"input\", {\n          onChange: this.handleChange,\n          name: \"email_address\",\n          value: this.state.email_address,\n          type: \"email\",\n          placeholder: \"Email Address\",\n          required: true\n        })), __jsx(\"div\", {\n          className: \"row \".concat(contactFormStyles.signin)\n        }, __jsx(\"div\", {\n          className: \"small-12 columns text-center\"\n        }, __jsx(\"input\", {\n          onClick: this._processSubmission,\n          type: \"submit\",\n          className: \"js-submit button\",\n          value: \"Send\"\n        }))));\n      } else {\n        return __jsx(\"h5\", {\n          className: \"text-center\"\n        }, this.state.confirmation);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: contactFormStyles.wrap\n      }, __jsx(\"div\", {\n        className: \"\".concat(contactFormStyles.contact)\n      }, __jsx(\"div\", {\n        className: \"\".concat(contactFormStyles.form)\n      }, __jsx(\"div\", {\n        className: \"row \".concat(contactFormStyles.row)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, this._renderForm()))))));\n    }\n  }]);\n\n  return NewsletterForm;\n}(React.Component);\n\nexport default NewsletterForm;","map":null,"metadata":{},"sourceType":"module"}