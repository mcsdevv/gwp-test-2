{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport WordpressService from '../services/wordpress';\nimport WhitePaperCard from '../components/WhitePaperCard';\nimport MemberCard from '../components/MemberCard';\nimport { decodeHTML } from 'entities';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ProfileSidebar from '../components/ProfileSidebar';\nimport profileStyles from '../public/styles/modules/profile.module.css';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_renderNoResults\", () => {\n      if (this.state.no_results) {\n        return __jsx(\"div\", {\n          className: profileStyles.noResults\n        }, __jsx(\"h4\", {\n          className: \"text-center\"\n        }, \"No active content.\"));\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(this, \"_renderLoadMoreClass\", () => {\n      if (this.state.reached_end == true || this.state.whitepapers.length < 4) {\n        return `${profileStyles.nav} hide`;\n      } else {\n        return `${profileStyles.nav}`;\n      }\n    });\n\n    _defineProperty(this, \"_renderTabClass\", tab => {\n      const {\n        active_tab\n      } = this.state;\n\n      if (active_tab == tab) {\n        return `${profileStyles.tab} ${profileStyles.open}`;\n      } else {\n        return `${profileStyles.tab}`;\n      }\n    });\n\n    _defineProperty(this, \"_renderListClass\", tab => {\n      const {\n        active_tab\n      } = this.state;\n\n      if (active_tab == tab) {\n        return `${profileStyles.active}`;\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(this, \"_toggleTab\", tab => {\n      var controls = document.querySelector('#controls');\n      event.preventDefault();\n      this.setState(state => ({\n        active_tab: tab,\n        error: false\n      }));\n      controls.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"nearest\"\n      });\n    });\n\n    this.state = {\n      active_tab: 1,\n      whitepapers: [],\n      no_results: false,\n      members: [],\n      organization: false,\n      working: false,\n      error: false,\n      reached_end: false\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.props.user) {\n      Router.push('/login');\n      return false;\n    }\n\n    const wordpress = new WordpressService();\n    const {\n      access_token\n    } = this.props.user;\n    const user_id = '';\n    let items = 4;\n    let offset = 0;\n    let topics = [];\n    let tags = [];\n    let format = '';\n    let agencies = [];\n    let search = [];\n    let start_date = '';\n    let end_date = '';\n    let sort_by = 'relevance';\n    let organization_id = this.props.organization_id;\n    const whitepapers = await wordpress.fetchWhitepapers(items, offset, topics, tags, format, agencies, search, start_date, end_date, sort_by, user_id, organization_id);\n    const members = await wordpress.fetchOrganizationMembers(access_token);\n    const organization = await wordpress.fetchOrganization(this.props.organization_id);\n    this.setState({\n      whitepapers: whitepapers,\n      members: members,\n      organization: organization\n    }, () => {\n      if (this.state.whitepapers.length < 1) {\n        this.setState(state => ({\n          no_results: true\n        }));\n      }\n    });\n  }\n\n  componentDidUpdate() {//console.log(this.state);\n  }\n\n  async _loadMore() {\n    this.setState({\n      working: true\n    });\n    const wordpress = new WordpressService();\n    const user_id = '';\n    let items = 4;\n    let offset = this.state.whitepapers.length;\n    let topics = [];\n    let tags = [];\n    let format = '';\n    let agencies = [];\n    let search = [];\n    let start_date = '';\n    let end_date = '';\n    let sort_by = 'relevance';\n    let organization_id = this.props.organization_id;\n    const whitepapers = await wordpress.fetchWhitepapers(items, offset, topics, tags, format, agencies, search, start_date, end_date, sort_by, user_id, organization_id);\n\n    if (whitepapers.length < items) {\n      this.setState({\n        reached_end: true\n      });\n    }\n\n    this.setState({\n      whitepapers: [...this.state.whitepapers, ...whitepapers],\n      working: false\n    });\n  }\n\n  _renderOrganizationName() {\n    if (this.state.organization) {\n      return this.state.organization.name;\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const display_name = this.props.display_name;\n    const {\n      user\n    } = this.props;\n    const {\n      whitepapers\n    } = this.state;\n    const {\n      members\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n      key: \"page-title\"\n    }, \"Dashboard\"), __jsx(\"meta\", {\n      charset: \"utf-8\"\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      sizes: \"180x180\",\n      href: \"/apple-touch-icon.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"32x32\",\n      href: \"/favicon-32x32.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"16x16\",\n      href: \"/favicon-16x16.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileImage\",\n      content: \"/favicon-270x270.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileColor\",\n      content: \"#ffffff\"\n    }), __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/site.webmanifest\"\n    })), __jsx(Header, _extends({}, user, {\n      display_name: display_name\n    })), __jsx(\"div\", {\n      className: `row ${profileStyles.pageContent}`\n    }, __jsx(\"div\", {\n      className: `small-12 medium-4 xlarge-3 columns`\n    }, __jsx(ProfileSidebar, {\n      organization_id: this.props.organization_id,\n      organization_email_mismatch: this.props.organization_email_mismatch,\n      organization_email_verified: this.props.organization_email_verified\n    })), __jsx(\"div\", {\n      className: `small-12 medium-8 xlarge-9 columns ${profileStyles.content}`\n    }, __jsx(\"div\", null, __jsx(\"h2\", null, this._renderOrganizationName())), __jsx(\"p\", null, \"Moving to a new organization?\"), __jsx(\"button\", {\n      onClick: () => {\n        Router.push('/contact');\n      },\n      className: `button ${profileStyles.button}`\n    }, \"Change My Organization\"), __jsx(\"div\", {\n      id: \"controls\",\n      className: profileStyles.controls\n    }, __jsx(\"ul\", null, __jsx(\"li\", {\n      className: this._renderListClass(1),\n      onClick: () => {\n        this._toggleTab(1);\n      }\n    }, __jsx(\"span\", null, \"All Content\")), __jsx(\"li\", {\n      className: this._renderListClass(2),\n      onClick: () => {\n        this._toggleTab(2);\n      }\n    }, __jsx(\"span\", null, \"Members\")))), __jsx(\"div\", {\n      className: profileStyles.tabs\n    }, __jsx(\"div\", {\n      className: this._renderTabClass(1)\n    }, __jsx(\"div\", {\n      className: `${profileStyles.form}`\n    }, __jsx(\"div\", {\n      className: \"small-up-1 large-up-2 clearfix\"\n    }, this._renderNoResults(), whitepapers.map(whitepaper => __jsx(\"div\", {\n      key: whitepaper.ID,\n      className: `column column-block`\n    }, __jsx(WhitePaperCard, {\n      hide_image: true,\n      id: whitepaper.ID,\n      slug: whitepaper.slug,\n      title: decodeHTML(whitepaper.title),\n      featured_media: whitepaper.featured_media,\n      excerpt: '',\n      topics: whitepaper.topics\n    })))), __jsx(\"div\", {\n      className: this._renderLoadMoreClass()\n    }, __jsx(\"button\", {\n      onClick: () => {\n        this._loadMore();\n      },\n      className: `button ${profileStyles.button}`\n    }, \"Load More\")))), __jsx(\"div\", {\n      className: this._renderTabClass(2)\n    }, __jsx(\"div\", {\n      className: `${profileStyles.userContainer}`\n    }, __jsx(\"div\", {\n      className: `small-12 columns ${profileStyles.userHeader}`\n    }, __jsx(\"div\", {\n      className: \"small-6 columns\"\n    }, __jsx(\"span\", null, \"Name\")), __jsx(\"div\", {\n      className: `small-6 columns ${profileStyles.titleHeading}`\n    }, __jsx(\"span\", null, \"Title\"))), __jsx(\"div\", {\n      className: `${profileStyles.userList}`\n    }, members.map(member => __jsx(\"div\", {\n      key: member.ID,\n      className: profileStyles.user\n    }, __jsx(MemberCard, {\n      id: member.ID,\n      slug: member.first_name,\n      first_name: member.first_name,\n      last_name: member.last_name,\n      job_title: member.job_title,\n      featured_media: member.featured_media //hide_image={true}\n      //excerpt={decodeHTML(whitepaper.excerpt)}\n\n    }))))))))), __jsx(Footer, null));\n  }\n\n}\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}