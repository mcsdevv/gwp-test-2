{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport WordpressService from '../services/wordpress';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ProfileSidebar from '../components/ProfileSidebar';\nimport profileStyles from '../public/styles/modules/profile.module.css';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_handleSave\", () => {\n      event.preventDefault();\n      let button, component, json, url, login, firstNameField, lastNameField, emailAddressField, jobTitleField;\n      firstNameField = document.querySelector('input[name=\"first_name\"]');\n      lastNameField = document.querySelector('input[name=\"last_name\"]');\n      emailAddressField = document.querySelector('input[name=\"email_address\"]');\n      jobTitleField = document.querySelector('input[name=\"job_title\"]');\n\n      if (!firstNameField.checkValidity()) {\n        firstNameField.classList.add('invalid');\n        return false;\n      } else {\n        firstNameField.classList.remove('invalid');\n      }\n\n      if (!lastNameField.checkValidity()) {\n        lastNameField.classList.add('invalid');\n        return false;\n      } else {\n        lastNameField.classList.remove('invalid');\n      }\n\n      if (!emailAddressField.checkValidity()) {\n        emailAddressField.classList.add('invalid');\n        return false;\n      } else {\n        emailAddressField.classList.remove('invalid');\n      }\n\n      button = document.querySelector('.js-save');\n      component = this;\n      const token = this.props.user.access_token;\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/user-update';\n      json = JSON.stringify({\n        \"email_address\": this.state.email_address,\n        \"first_name\": this.state.first_name,\n        \"last_name\": this.state.last_name,\n        \"job_title\": this.state.job_title,\n        \"access_token\": token\n      });\n      button.disabled = true;\n      component.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setTimeout(function (e) {\n          button.disabled = false;\n          let flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            component.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          window.location.reload();\n        }, 1000);\n      });\n    });\n\n    _defineProperty(this, \"triggerPhotoUpload\", () => {\n      document.querySelector('#photo-upload').dispatchEvent(new Event('submit'));\n    });\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      job_title: '',\n      featured_media: false,\n      working: false,\n      display_name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let name = event.target.getAttribute('name');\n    this.setState({\n      [name]: event.target.value\n    }, () => {});\n  }\n\n  async componentDidMount() {\n    if (!this.props.user) {\n      Router.push('/login');\n      return false;\n    }\n\n    this.input = React.createRef();\n    const access_token = this.props.user.access_token;\n\n    if (!access_token) {\n      return false;\n    }\n\n    const wordpress = new WordpressService();\n    const user = await wordpress.getUser(access_token);\n    this.setState(state => ({\n      first_name: user.first_name,\n      last_name: user.last_name,\n      job_title: user.job_title,\n      email_address: user.email_address,\n      featured_media: user.featured_media,\n      display_name: user.first_name + ' ' + user.last_name\n    }));\n  }\n\n  componentDidUpdate() {\n    const {\n      working\n    } = this.state;\n    let html = document.querySelector('html');\n\n    if (working) {\n      html.classList.add('working');\n    } else {\n      html.classList.remove('working');\n    }\n  }\n\n  _editPhoto() {\n    alert(); //console.log(this);\n    // this.setState(state => ({\n    // \tfeatured_media: !this.state.featured_media,\n    // }));\n  }\n\n  uploadPhotoSubmit(e) {\n    //console.log('new image submitted');\n    e.preventDefault();\n    let formData = new FormData(e.target);\n    const token = this.props.user.access_token;\n    let component = this;\n    let file = formData.get('image_file');\n    formData.append(\"access_token\", token);\n\n    if (!token) {\n      return false;\n    }\n\n    if (file.size > 10048576) {\n      this.setState({\n        error: {\n          photo: 'Selected file is larger than 10MB'\n        }\n      });\n      return false;\n    }\n\n    var pattern = /image-*/;\n\n    if (!file.type.match(pattern)) {\n      this.setState({\n        error: {\n          photo: 'Unsupported file type. Please select a JPG or PNG.'\n        }\n      });\n      return false;\n    }\n\n    component.setState({\n      working: true\n    });\n    let url = e.target.action;\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      console.log('response');\n      console.log(response);\n      return response.json();\n    }).then(body => {\n      console.log('body response');\n      console.log(body);\n      let flat = JSON.stringify(body);\n\n      if (flat.includes('error')) {\n        component.setState({\n          error: {\n            image: 'The selected file could not be uploaded. There may be something wrong with your image. Please contact support for assistance.'\n          },\n          working: false\n        });\n        return false;\n      } else {\n        component.setState({\n          featured_media: body.featured_media,\n          working: false\n        });\n      }\n    });\n  }\n\n  _renderProfileImage() {\n    if (this.state.featured_media !== false && this.state.featured_media.hasOwnProperty('sizes')) {\n      let img_url;\n\n      if (this.state.featured_media.sizes.hasOwnProperty('square')) {\n        img_url = this.state.featured_media.sizes.square.file;\n      } else {\n        img_url = this.state.featured_media.file;\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: profileStyles.profileAvatar\n      }, __jsx(\"label\", null, __jsx(\"form\", {\n        id: \"photo-upload\",\n        action: \"https://gwpadmin.codewrangler.io/api/gwp/v1/upload-profile-photo\",\n        onSubmit: e => this.uploadPhotoSubmit(e),\n        method: \"post\",\n        encType: \"multipart/form-data\"\n      }, __jsx(\"input\", {\n        onChange: this.triggerPhotoUpload,\n        name: \"image_file\",\n        type: \"file\",\n        accept: \"image/jpeg,image/png\"\n      }), __jsx(\"img\", {\n        className: profileStyles.user,\n        alt: \"\",\n        src: img_url\n      }), __jsx(\"div\", {\n        className: profileStyles.editPhoto\n      }, __jsx(\"img\", {\n        alt: \"\",\n        src: \"/images/edit-photo.svg\"\n      }))))));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: profileStyles.defaultAvatar\n      }, __jsx(\"label\", null, __jsx(\"form\", {\n        id: \"photo-upload\",\n        action: \"https://gwpadmin.codewrangler.io/api/gwp/v1/upload-profile-photo\",\n        onSubmit: e => this.uploadPhotoSubmit(e),\n        method: \"post\",\n        encType: \"multipart/form-data\"\n      }, __jsx(\"input\", {\n        onChange: this.triggerPhotoUpload,\n        name: \"image_file\",\n        type: \"file\",\n        accept: \"image/jpeg,image/png\"\n      }), __jsx(\"img\", {\n        className: profileStyles.user,\n        alt: \"\",\n        src: \"/images/default-avatar.svg\"\n      }), __jsx(\"div\", {\n        className: profileStyles.editPhoto\n      }, __jsx(\"img\", {\n        alt: \"\",\n        src: \"/images/edit-photo.svg\"\n      }))))));\n    }\n  }\n\n  _renderPanelClass() {\n    if (this.state.first_name == '') {\n      return `${profileStyles.form} blur`;\n    } else {\n      return `${profileStyles.form}`;\n    }\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const display_name = this.props.display_name;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n      key: \"page-title\"\n    }, \"Edit Profile\"), __jsx(\"meta\", {\n      charset: \"utf-8\"\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      sizes: \"180x180\",\n      href: \"/apple-touch-icon.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"32x32\",\n      href: \"/favicon-32x32.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"16x16\",\n      href: \"/favicon-16x16.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileImage\",\n      content: \"/favicon-270x270.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileColor\",\n      content: \"#ffffff\"\n    }), __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/site.webmanifest\"\n    })), __jsx(Header, _extends({}, user, {\n      display_name: display_name\n    })), __jsx(\"div\", {\n      className: `row ${profileStyles.pageContent}`\n    }, __jsx(\"div\", {\n      className: `small-12 medium-4 xlarge-3 columns`\n    }, __jsx(ProfileSidebar, {\n      organization_id: this.props.organization_id,\n      organization_email_mismatch: this.props.organization_email_mismatch,\n      organization_email_verified: this.props.organization_email_verified\n    })), __jsx(\"div\", {\n      className: `small-12 medium-8 xlarge-9 columns ${profileStyles.content}`\n    }, __jsx(\"div\", {\n      className: this._renderPanelClass()\n    }, __jsx(\"div\", {\n      className: `row ${profileStyles.row}`\n    }, __jsx(\"div\", {\n      className: profileStyles.pageHeader\n    }, this._renderProfileImage(), __jsx(\"h3\", null, this.state.display_name)), __jsx(\"form\", {\n      method: \"POST\"\n    }, __jsx(\"div\", {\n      className: \"small-12 xlarge-6 columns\"\n    }, __jsx(\"label\", null, \"First Name\", __jsx(\"input\", {\n      onChange: this.handleChange,\n      name: \"first_name\",\n      value: this.state.first_name,\n      type: \"text\",\n      placeholder: \"First Name\",\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"small-12 xlarge-6 columns\"\n    }, __jsx(\"label\", null, \"Last Name\", __jsx(\"input\", {\n      onChange: this.handleChange,\n      name: \"last_name\",\n      value: this.state.last_name,\n      type: \"text\",\n      placeholder: \"Last Name\",\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"small-12 xlarge-6 columns\"\n    }, __jsx(\"label\", null, \"Email\", __jsx(\"input\", {\n      onChange: this.handleChange,\n      name: \"email_address\",\n      value: this.state.email_address,\n      type: \"email\",\n      placeholder: \"Email Address\",\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"small-12 xlarge-6 columns\"\n    }, __jsx(\"label\", null, \"Job Title\", __jsx(\"input\", {\n      onChange: this.handleChange,\n      name: \"job_title\",\n      value: this.state.job_title,\n      type: \"text\",\n      placeholder: \"Job Title\"\n    }))), __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(\"div\", {\n      className: `${profileStyles.save}`\n    }, __jsx(\"input\", {\n      onClick: this._handleSave,\n      type: \"submit\",\n      className: \"js-save button\",\n      value: \"Save Changes\"\n    })))))))), __jsx(Footer, null));\n  }\n\n}\n\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}