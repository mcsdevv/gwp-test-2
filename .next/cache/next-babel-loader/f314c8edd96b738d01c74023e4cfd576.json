{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { decodeHTML } from 'entities';\nimport WordpressService from '../../services/wordpress';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport Subscribe from '../../components/Subscribe';\nimport BlogCard from '../../components/BlogCard';\nimport blogStyles from '../../public/styles/modules/blog.module.css';\n\nclass Blog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_renderLoadMoreClass\", () => {\n      if (this.state.reached_end == true) {\n        return `${blogStyles.nav} hide`;\n      } else {\n        return `${blogStyles.nav}`;\n      }\n    });\n\n    this.state = {\n      posts: [],\n      search: '',\n      reached_end: false,\n      working: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState(state => ({\n      posts: this.props.posts\n    }));\n    const {\n      user\n    } = this.props;\n    const {\n      page\n    } = this.props;\n  }\n\n  componentDidUpdate() {\n    const {\n      working\n    } = this.state;\n    let html = document.querySelector('html');\n\n    if (working) {\n      html.classList.add('working');\n    } else {\n      html.classList.remove('working');\n    }\n  }\n\n  async _loadMore() {\n    this.setState({\n      working: true\n    });\n    const wordpress = new WordpressService();\n    let items = 9;\n    let offset = this.state.posts.length;\n    const posts = await wordpress.fetchPosts(items, offset);\n\n    if (posts.length < items) {\n      this.setState({\n        reached_end: true\n      });\n    }\n\n    this.setState({\n      posts: [...this.state.posts, ...posts],\n      working: false\n    });\n  }\n\n  async blogSearchSubmit(e) {\n    e.preventDefault();\n    window.scrollBy(0, 300); // var results = document.querySelector('.js-results');\n    // //results.scrollTop -= 800;\n    // results.scrollIntoView({\n    // \tbehavior: \"smooth\",\n    // \tblock: \"end\",\n    // \tinline: \"nearest\"\n    // });\n\n    const wordpress = new WordpressService();\n    let formData = new FormData(e.target);\n    let search = formData.get('search_field');\n\n    if (search.length < 1) {\n      return false;\n    }\n\n    this.setState({\n      working: true,\n      search: search\n    });\n    let items = 100;\n    let offset = 0;\n    const posts = await wordpress.fetchPosts(items, offset, search);\n    this.setState({\n      posts: posts,\n      working: false,\n      reached_end: true\n    });\n  }\n\n  async _clearSearch() {\n    let search_field = document.querySelector('input[name=\"search_field\"]');\n    search_field.value = '';\n    this.setState({\n      working: true\n    });\n    const wordpress = new WordpressService();\n    let items = 9;\n    let offset = 0;\n    const posts = await wordpress.fetchPosts(items, offset);\n    this.setState({\n      posts: posts,\n      search: false,\n      working: false,\n      reached_end: false\n    });\n  }\n\n  renderBlogHeading() {\n    if (this.state.search == false) {\n      return __jsx(\"h2\", null, \"Articles\");\n    } else {\n      return __jsx(\"h2\", null, \"Search results for: \", this.state.search, \" \", __jsx(\"span\", {\n        onClick: () => {\n          this._clearSearch(1);\n        },\n        className: blogStyles.clearSearch\n      }, \"clear search\"));\n    }\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    const {\n      page\n    } = this.props;\n    const display_name = this.props.display_name;\n    const seo_title = decodeHTML(page.seo_title);\n    const open_graph_title = decodeHTML(page.open_graph_title);\n    const twitter_title = decodeHTML(page.twitter_title);\n    const seo_desc = decodeHTML(page.seo_desc);\n    const open_graph_desc = decodeHTML(page.open_graph_desc);\n    const twitter_desc = decodeHTML(page.twitter_desc);\n    const open_graph_image_url = decodeHTML(page.open_graph_image_url);\n    const twitter_image_url = decodeHTML(page.twitter_image_url);\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n      key: \"page-title\"\n    }, seo_title), __jsx(\"meta\", {\n      charset: \"utf-8\"\n    }), __jsx(\"link\", {\n      rel: \"apple-touch-icon\",\n      sizes: \"180x180\",\n      href: \"/apple-touch-icon.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"32x32\",\n      href: \"/favicon-32x32.png\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      sizes: \"16x16\",\n      href: \"/favicon-16x16.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileImage\",\n      content: \"/favicon-270x270.png\"\n    }), __jsx(\"meta\", {\n      name: \"msapplication-TileColor\",\n      content: \"#ffffff\"\n    }), __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/site.webmanifest\"\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: seo_title,\n      key: \"og-title\"\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: seo_desc,\n      key: \"description\"\n    }), __jsx(\"meta\", {\n      property: \"og:locale\",\n      content: \"en_US\",\n      key: \"og-locale\"\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: open_graph_title,\n      key: \"og-title\"\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: open_graph_desc,\n      key: \"og-description\"\n    }), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: page.permalink,\n      key: \"og-url\"\n    }), __jsx(\"meta\", {\n      property: \"og:site_name\",\n      content: \"GovWhitePapers\"\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: open_graph_image_url,\n      key: \"og-image\"\n    }), __jsx(\"meta\", {\n      property: \"og:image:secure_url\",\n      content: open_graph_image_url,\n      key: \"og-image-secure\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:card\",\n      content: \"summary_large_image\",\n      key: \"twitter-card\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:description\",\n      content: twitter_desc,\n      key: \"twitter-description\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:title\",\n      content: twitter_title,\n      key: \"twitter-title\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:site\",\n      content: \"@GovEventsGroup\",\n      key: \"twitter-site\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:image\",\n      content: twitter_image_url,\n      key: \"twitter-image\"\n    }), __jsx(\"meta\", {\n      name: \"twitter:creator\",\n      content: \"@GovEventsGroup\",\n      key: \"twitter-creator\"\n    })), __jsx(Header, _extends({}, user, {\n      display_name: display_name\n    })), __jsx(\"div\", {\n      className: `row ${blogStyles.pageContent}`\n    }, __jsx(\"div\", {\n      className: `small-12 medium-6 columns ${blogStyles.text}`\n    }, __jsx(\"h1\", null, \"Blog\"), __jsx(\"p\", null, \"We break down the buzz around government hot topics.\"), __jsx(\"form\", {\n      id: \"blog-search\",\n      action: \"https://gwpadmin.codewrangler.io/api/gwp/v1/posts\",\n      onSubmit: e => this.blogSearchSubmit(e),\n      method: \"get\"\n    }, __jsx(\"div\", {\n      className: `input-group ${blogStyles.search}`\n    }, __jsx(\"input\", {\n      name: \"search_field\",\n      className: \"input-group-field\",\n      placeholder: \"Search articles\",\n      type: \"text\"\n    }), __jsx(\"div\", {\n      className: \"input-group-button\"\n    }, __jsx(\"button\", {\n      className: `button ${blogStyles.button}`,\n      type: \"submit\"\n    }, __jsx(\"img\", {\n      src: \"/images/right-arrow-white.svg\",\n      alt: \"\"\n    })))))), __jsx(\"div\", {\n      className: `small-12 medium-6 columns text-right ${blogStyles.image}`\n    }, __jsx(\"img\", {\n      src: \"/images/blog-img.jpg\",\n      alt: \"\"\n    }))), __jsx(\"div\", {\n      className: blogStyles.blogRow\n    }, __jsx(\"div\", {\n      className: `row ${blogStyles.heading}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, this.renderBlogHeading())), __jsx(\"div\", {\n      className: \"js-results\"\n    }), __jsx(\"div\", {\n      className: `row small-up-1 medium-up-2 large-up-3`\n    }, posts.map(blog => __jsx(\"div\", {\n      key: blog.ID,\n      className: `column column-block`\n    }, __jsx(BlogCard, {\n      id: blog.ID,\n      slug: blog.slug,\n      title: decodeHTML(blog.title),\n      featured_media: blog.featured_media,\n      excerpt: decodeHTML(blog.excerpt),\n      category: blog.categories,\n      display_date: blog.display_date,\n      author_name: blog.author_name\n    })))), __jsx(\"div\", {\n      className: this._renderLoadMoreClass()\n    }, __jsx(\"button\", {\n      onClick: () => {\n        this._loadMore();\n      },\n      className: `button ${blogStyles.button}`\n    }, \"Load More\"))), __jsx(Subscribe, null), __jsx(Footer, null));\n  }\n\n}\n\nexport default Blog;\nexport async function getStaticProps(ctx) {\n  const wordpress = new WordpressService();\n  const page = await wordpress.fetchPage('blog');\n  let items = 9;\n  let offset = 0;\n  const posts = await wordpress.fetchPosts(items, offset);\n  return {\n    props: {\n      page,\n      posts\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}