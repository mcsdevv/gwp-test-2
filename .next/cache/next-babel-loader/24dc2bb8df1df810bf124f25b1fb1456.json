{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport WordpressService from '../services/wordpress';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ProfileSidebar from '../components/ProfileSidebar';\nimport profileStyles from '../public/styles/modules/profile.module.css';\n\nvar Settings = /*#__PURE__*/function (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_systemEmailsAction\", function () {\n      _this.setState(function () {\n        return {\n          unsubscribe_system_emails: !_this.state.unsubscribe_system_emails\n        };\n      }, function () {\n        var component, json, url, login;\n        component = _assertThisInitialized(_this);\n        component.setState({\n          working: true\n        });\n        var access_token = _this.props.user.access_token;\n        url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/user-settings';\n        json = JSON.stringify({\n          \"unsubscribe_system_emails\": _this.state.unsubscribe_system_emails,\n          \"access_token\": access_token\n        });\n        fetch(url, {\n          method: 'post',\n          body: json,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          setTimeout(function (e) {\n            var flat = JSON.stringify(data);\n            component.setState({\n              working: false\n            });\n          }, 100);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSave\", function () {\n      event.preventDefault();\n      var button, component, json, url, login, newPasswordField, verifyNewPasswordField;\n      button = document.querySelector('.js-save');\n      component = _assertThisInitialized(_this);\n      button.disabled = true;\n      component.setState({\n        working: true\n      });\n      var access_token = _this.props.user.access_token;\n\n      if (_this.state.current_password == '') {\n        component.setState({\n          error: {\n            current_password: 'Enter your current password.'\n          },\n          working: false\n        });\n        button.disabled = false;\n        return false;\n      }\n\n      if (_this.state.new_password.length < 10) {\n        component.setState({\n          error: {\n            new_password: 'Must be at least 10 characters'\n          },\n          working: false\n        });\n        button.disabled = false;\n        return false;\n      }\n\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/user-settings';\n      json = JSON.stringify({\n        \"current_password\": _this.state.current_password,\n        \"new_password\": _this.state.new_password,\n        \"access_token\": access_token\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        setTimeout(function (e) {\n          button.disabled = false;\n          var flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            component.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          component.setState({\n            current_password: '',\n            new_password: '',\n            working: false\n          });\n        }, 1000);\n      });\n    });\n\n    _this.state = {\n      current_password: '',\n      new_password: '',\n      unsubscribe_system_emails: false,\n      working: false,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user, login, access_token, wordpress, u;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.props.user) {\n                  _context.next = 3;\n                  break;\n                }\n\n                Router.push('/login');\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n                user = this.props.user;\n                this.input = React.createRef();\n\n                if (this.props.user) {\n                  _context.next = 9;\n                  break;\n                }\n\n                login = document.querySelector('.js-login');\n                login.click();\n                return _context.abrupt(\"return\", false);\n\n              case 9:\n                access_token = this.props.user.access_token;\n\n                if (access_token) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 12:\n                wordpress = new WordpressService();\n                _context.next = 15;\n                return wordpress.getUser(access_token);\n\n              case 15:\n                u = _context.sent;\n                this.setState(function (state) {\n                  return {\n                    unsubscribe_system_emails: u.unsubscribe_system_emails\n                  };\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var working = this.state.working;\n      var html = document.querySelector('html');\n\n      if (working) {\n        html.classList.add('working');\n      } else {\n        html.classList.remove('working');\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.getAttribute('name');\n      this.setState(_defineProperty({}, name, event.target.value), function () {});\n    }\n  }, {\n    key: \"_renderError\",\n    value: function _renderError(field) {\n      if (this.state.error) {\n        var flat = JSON.stringify(this.state.error);\n\n        if (flat.includes('current_password')) {\n          if (field == 'current_password') {\n            return __jsx(\"span\", {\n              className: \"\".concat(profileStyles.errorText)\n            }, this.state.error.current_password);\n          }\n        }\n\n        if (flat.includes('new_password')) {\n          if (field == 'new_password') {\n            return __jsx(\"span\", {\n              className: \"\".concat(profileStyles.errorText)\n            }, this.state.error.new_password);\n          }\n        }\n\n        if (flat.includes('Incorrect password')) {\n          if (field == 'current_password') {\n            var response = 'Incorrect password.';\n            return __jsx(\"span\", {\n              className: \"\".concat(profileStyles.errorText)\n            }, response);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var display_name = this.props.display_name;\n      var user = this.props.user;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n        key: \"page-title\"\n      }, \"Settings\"), __jsx(\"meta\", {\n        charset: \"utf-8\"\n      }), __jsx(\"link\", {\n        rel: \"apple-touch-icon\",\n        sizes: \"180x180\",\n        href: \"/apple-touch-icon.png\"\n      }), __jsx(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"32x32\",\n        href: \"/favicon-32x32.png\"\n      }), __jsx(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"16x16\",\n        href: \"/favicon-16x16.png\"\n      }), __jsx(\"meta\", {\n        name: \"msapplication-TileImage\",\n        content: \"/favicon-270x270.png\"\n      }), __jsx(\"meta\", {\n        name: \"msapplication-TileColor\",\n        content: \"#ffffff\"\n      }), __jsx(\"link\", {\n        rel: \"manifest\",\n        href: \"/site.webmanifest\"\n      })), __jsx(Header, _extends({}, user, {\n        display_name: display_name\n      })), __jsx(\"div\", {\n        className: \"row \".concat(profileStyles.pageContent, \" \").concat(profileStyles.settings)\n      }, __jsx(\"div\", {\n        className: \"small-12 medium-4 xlarge-3 columns\"\n      }, __jsx(ProfileSidebar, {\n        organization_id: this.props.organization_id,\n        organization_email_mismatch: this.props.organization_email_mismatch,\n        organization_email_verified: this.props.organization_email_verified\n      })), __jsx(\"div\", {\n        className: \"small-12 medium-8 xlarge-9 columns \".concat(profileStyles.content)\n      }, __jsx(\"div\", {\n        className: profileStyles.heading\n      }, __jsx(\"h2\", null, \"Settings\")), __jsx(\"form\", {\n        method: \"POST\",\n        className: profileStyles.form\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"label\", null, \"Current Password \", this._renderError('current_password'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"current_password\",\n        value: this.state.current_password,\n        type: \"password\",\n        placeholder: \"Your current password\",\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"label\", null, \"New Password \", this._renderError('new_password'), __jsx(\"span\", {\n        className: profileStyles.subLabel\n      }, __jsx(\"span\", {\n        className: profileStyles.dot\n      }, \"\\xB7\"), \" minimum of 10 characters\"), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"new_password\",\n        value: this.state.new_password,\n        type: \"password\",\n        placeholder: \"Your new password\",\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"small-12 columns text-center\"\n      }, __jsx(\"div\", {\n        className: \"\".concat(profileStyles.save)\n      }, __jsx(\"input\", {\n        onClick: this._handleSave,\n        type: \"submit\",\n        className: \"js-save button\",\n        value: \"Save Changes\"\n      })))), __jsx(\"div\", {\n        className: \"small-12 columns \".concat(profileStyles.systemEmails)\n      }, __jsx(\"label\", {\n        className: profileStyles.label\n      }, \" Unsubscribe from system emails\", __jsx(\"input\", {\n        type: \"checkbox\",\n        onClick: function onClick() {\n          _this2._systemEmailsAction();\n        },\n        name: \"unsubscribe_system_emails\",\n        checked: this.state.unsubscribe_system_emails,\n        value: \"1\"\n      }), __jsx(\"span\", {\n        className: profileStyles.checkmark\n      }))))), __jsx(Footer, null));\n    }\n  }]);\n\n  return Settings;\n}(React.Component);\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}