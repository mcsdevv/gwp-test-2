{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport homeSlidesStyles from '../public/styles/modules/components/homeslides.module.css';\nimport Link from 'next/link';\n\nclass HomeSlides extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_transitionSlide\", type => {\n      if (type == 'next') {\n        if (this.state.active_slide == this.state.max_slides) {\n          this.setState(state => ({\n            active_slide: 0\n          }));\n        } else {\n          this.setState(state => ({\n            active_slide: state.active_slide + 1\n          }));\n        }\n      } else {\n        if (this.state.active_slide == 0) {\n          this.setState(state => ({\n            active_slide: state.max_slides\n          }));\n        } else {\n          this.setState(state => ({\n            active_slide: state.active_slide - 1\n          }));\n        }\n      }\n    });\n\n    _defineProperty(this, \"_handleKeyboardInput\", e => {\n      if (e.which == 37) {\n        clearInterval(this.interval);\n\n        this._transitionSlide('prev');\n      }\n\n      if (e.which == 39) {\n        clearInterval(this.interval);\n\n        this._transitionSlide('next');\n      }\n    });\n\n    _defineProperty(this, \"_renderSliderNav\", () => {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        onClick: () => {\n          clearInterval(this.interval);\n\n          this._transitionSlide('prev');\n        },\n        className: homeSlidesStyles.prev\n      }, __jsx(\"img\", {\n        className: homeSlidesStyles.linkArrow,\n        src: \"/images/slider-arrow-left.svg\",\n        alt: \"\"\n      })), __jsx(\"span\", {\n        onClick: () => {\n          clearInterval(this.interval);\n\n          this._transitionSlide('next');\n        },\n        className: homeSlidesStyles.next\n      }, __jsx(\"img\", {\n        className: homeSlidesStyles.linkArrow,\n        src: \"/images/slider-arrow-right.svg\",\n        alt: \"\"\n      })));\n    });\n\n    this.state = {\n      value: 0,\n      active_slide: 0,\n      max_slides: this.props.slides.length - 1\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(value) {\n    this.setState({\n      value\n    });\n  }\n\n  componentDidMount() {\n    if (false) {\n      window.addEventListener('keydown', this._handleKeyboardInput);\n      this.interval = setInterval(() => {\n        this._transitionSlide('next');\n      }, 4000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  componentDidUpdate() {// console.log('activeslide');\n    // console.log(this.state.active_slide);\n  }\n\n  render() {\n    let component = this;\n    return __jsx(\"div\", {\n      className: homeSlidesStyles.bannerWrap\n    }, this.props.slides.map(function (slide, index) {\n      let bannerClass = '';\n\n      if (index == component.state.active_slide) {\n        if (slide.type == 'internal') {\n          bannerClass = `${homeSlidesStyles.banner} ${homeSlidesStyles.show}`;\n        } else {\n          bannerClass = `${homeSlidesStyles.banner} ${homeSlidesStyles.show} ${homeSlidesStyles.external}`;\n        }\n      } else {\n        if (slide.type == 'internal') {\n          bannerClass = `${homeSlidesStyles.banner}`;\n        } else {\n          bannerClass = `${homeSlidesStyles.banner} ${homeSlidesStyles.external}`;\n        }\n      }\n\n      if (slide.type == 'internal') {\n        let img_url;\n\n        if (slide.featured_media.hasOwnProperty('sizes')) {\n          if (slide.featured_media.sizes.hasOwnProperty('hero')) {\n            img_url = slide.featured_media.sizes.hero.file;\n          } else {\n            img_url = slide.featured_media.file;\n          }\n        } else {\n          img_url = slide.featured_media.file;\n        }\n\n        let styleLogo = {\n          backgroundImage: `url(${img_url})`\n        };\n        return __jsx(\"div\", {\n          key: index,\n          className: bannerClass,\n          key: index,\n          style: styleLogo\n        }, __jsx(\"div\", {\n          className: homeSlidesStyles.bannerContent\n        }, __jsx(\"div\", {\n          className: \"row\"\n        }, __jsx(\"div\", {\n          className: \"small-12 columns\"\n        }, __jsx(\"h2\", {\n          className: homeSlidesStyles.bannerHeading\n        }, slide.headline), __jsx(\"div\", {\n          className: homeSlidesStyles.bannerDescription\n        }, slide.description), __jsx(\"div\", {\n          className: homeSlidesStyles.bannerCTA\n        }, __jsx(Link, {\n          href: \"/find\"\n        }, __jsx(\"h5\", null, __jsx(\"a\", null, \"Get Started \", __jsx(\"img\", {\n          className: homeSlidesStyles.linkArrow,\n          src: \"/images/right-arrow-white.svg\",\n          alt: \"\"\n        })))))))), component._renderSliderNav());\n      } else {\n        return __jsx(\"div\", {\n          className: bannerClass,\n          key: index\n        }, __jsx(\"broadstreet-zone\", {\n          \"zone-id\": slide.ad_zone\n        }), __jsx(\"broadstreet-zone\", {\n          \"zone-id\": slide.ad_zone\n        }), component._renderSliderNav());\n      }\n    }));\n  }\n\n}\n\nexport default HomeSlides;","map":null,"metadata":{},"sourceType":"module"}