{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { decodeHTML } from 'entities';\nimport WordpressService from '../services/wordpress';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport registerStyles from '../public/styles/modules/register.module.css';\nimport DatePicker from \"react-datepicker\";\n\nvar Register = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_openLogin\", function () {\n      var login = document.querySelector('.js-login');\n      login.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeTopic\", function (id) {\n      var selected_topics = _this.state.selected_topics;\n      var index = selected_topics.findIndex(function (topic) {\n        return topic.term_id == id;\n      });\n\n      if (index !== -1) {\n        selected_topics.splice(index, 1);\n\n        _this.setState({\n          'selected_topics': selected_topics\n        });\n\n        var select = document.querySelector('select[name=\"select_topic\"]');\n        select.selectedIndex = 0;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderSelectedTopics\", function () {\n      var selected_topics = _this.state.selected_topics;\n\n      if (selected_topics.length < 1) {\n        return null;\n      } else {\n        return __jsx(React.Fragment, null, selected_topics.map(function (topic) {\n          return __jsx(\"div\", {\n            key: topic.term_id,\n            className: registerStyles.selectedTopic\n          }, decodeHTML(topic.name), __jsx(\"span\", {\n            onClick: function onClick() {\n              _this.removeTopic(topic.term_id);\n            },\n            className: registerStyles.close\n          }, __jsx(\"img\", {\n            src: \"/images/close-blue.svg\",\n            alt: \"\"\n          })));\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderOrganizationSelect\", function () {\n      var agencies = _this.props.agencies;\n      var works_for = _this.state.works_for;\n\n      if (works_for == '') {\n        return null;\n      }\n\n      if (works_for == 'private_industry' || works_for == 'government_contractor') {\n        return __jsx(React.Fragment, null, __jsx(\"form\", {\n          autoComplete: \"off\"\n        }, __jsx(\"div\", {\n          className: registerStyles.findOrganization\n        }, __jsx(\"label\", null, \"Find Organization \", _this._renderError('organization_name'), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          name: \"organization_name\",\n          type: \"search\",\n          autoComplete: _this.generateRandomString(),\n          placeholder: \"Start typing your organization's name\"\n        }), _this._renderOrganizationsResult()), _this._renderSelectedOrganization(), __jsx(\"label\", null, \"Organization Email \", _this._renderError('organization_email'), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          name: \"organization_email\",\n          autoComplete: _this.generateRandomString(),\n          value: _this.state.organization_email,\n          type: \"email\",\n          placeholder: \"To verify your affiliation\"\n        }))), __jsx(\"div\", {\n          className: registerStyles.addDivider\n        }, __jsx(\"hr\", null), __jsx(\"span\", null, \"or add new\")), __jsx(\"div\", {\n          className: registerStyles.addOrganization\n        }, __jsx(\"label\", null, \"Add Organization \", _this._renderError('new_organization'), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          autoComplete: _this.generateRandomString(),\n          name: \"new_organization\",\n          type: \"text\",\n          placeholder: \"Type organization name\"\n        }))), __jsx(\"label\", null, \"Organization Email \", _this._renderError('new_organization_email'), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          name: \"new_organization_email\",\n          value: _this.state.new_organization_email,\n          autoComplete: _this.generateRandomString(),\n          type: \"email\",\n          placeholder: \"To verify your affiliation\"\n        }))));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(\"label\", null, \"Personal Email \", _this._renderError('personal_email'), __jsx(\"span\", {\n          className: registerStyles.subLabel\n        }, __jsx(\"span\", {\n          className: registerStyles.dot\n        }, \"\\xB7\"), \" optional\"), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          name: \"personal_email\",\n          value: _this.state.personal_email,\n          type: \"email\",\n          placeholder: \"Add your personal email\"\n        })), __jsx(\"label\", null, \"Work Email \", _this._renderError('work_email'), __jsx(\"span\", {\n          className: registerStyles.subLabel\n        }, __jsx(\"span\", {\n          className: registerStyles.dot\n        }, \"\\xB7\"), \" optional\"), __jsx(\"input\", {\n          onChange: _this.handleChange,\n          name: \"work_email\",\n          value: _this.state.work_email,\n          type: \"email\",\n          placeholder: \"Add your work email\"\n        })));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setOrganization\", function (id, name) {\n      var searchInput = document.querySelector('input[name=\"organization_name\"]');\n      searchInput.value = '';\n\n      _this.setState(function (state) {\n        return {\n          organization_id: id,\n          organization_name: name,\n          organizations: []\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderSelectedOrganization\", function () {\n      var organization_id = _this.state.organization_id;\n\n      if (organization_id) {\n        return __jsx(\"div\", {\n          className: registerStyles.selectedOrganization\n        }, _this.state.organization_name, __jsx(\"span\", {\n          onClick: function onClick() {\n            _this.setState(function (state) {\n              return {\n                organization_id: '',\n                organization_name: ''\n              };\n            });\n          },\n          className: registerStyles.close\n        }, __jsx(\"img\", {\n          src: \"/images/close-blue.svg\",\n          alt: \"\"\n        })));\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderOrganizationsResult\", function () {\n      var organizations = _this.state.organizations;\n\n      if (organizations.length < 1) {\n        return null;\n      } else {\n        return __jsx(\"div\", {\n          className: registerStyles.results\n        }, __jsx(\"ul\", null, organizations.map(function (org) {\n          return __jsx(\"li\", {\n            key: org.ID,\n            \"data-id\": org.ID,\n            onClick: function onClick() {\n              _this._setOrganization(org.ID, org.name);\n            }\n          }, decodeHTML(org.name));\n        })));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTabClass\", function (tab) {\n      var active_tab = _this.state.active_tab;\n\n      if (active_tab == tab) {\n        return \"\".concat(registerStyles.tab, \" \").concat(registerStyles.open);\n      } else {\n        return \"\".concat(registerStyles.tab);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderSocialWrapClass\", function () {\n      var active_tab = _this.state.active_tab;\n\n      if (active_tab == 1) {\n        return \"\".concat(registerStyles.socialWrap);\n      } else {\n        return \"\".concat(registerStyles.socialWrap, \" \").concat(registerStyles.hide);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderControlIcon\", function (tab) {\n      var active_tab = _this.state.active_tab;\n\n      if (active_tab == tab) {\n        return __jsx(\"img\", {\n          src: \"/images/tab-active.svg\"\n        });\n      } else {\n        if (active_tab > tab) {\n          return __jsx(\"img\", {\n            src: \"/images/tab-complete.svg\"\n          });\n        } else {\n          return __jsx(\"img\", {\n            src: \"/images/tab-inactive.svg\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleRegistration\", function () {\n      event.preventDefault();\n      var button, component, json, url, login, firstNameField, lastNameField, emailAddressField, jobTitleField;\n      button = document.querySelector('.js-register');\n      component = _assertThisInitialized(_this);\n\n      if (!_this.state.works_for) {\n        var selectFormat = document.querySelector('select[name=\"works_for\"]');\n\n        _this.setState({\n          error: {\n            works_for: 'Please select your industry.'\n          }\n        });\n\n        selectFormat.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n        return;\n      }\n\n      if (_this.state.job_title.length < 2) {\n        var inputJobTitle = document.querySelector('input[name=\"job_title\"]');\n\n        _this.setState({\n          error: {\n            job_title: 'Invalid job title'\n          }\n        });\n\n        inputJobTitle.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n        return false;\n      }\n\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/register-user';\n      json = JSON.stringify({\n        \"email_address\": _this.state.email_address,\n        \"phone_number\": _this.state.phone_number,\n        \"password\": _this.state.password,\n        \"password_confirm\": parseInt(_this.state.password_confirm),\n        \"first_name\": _this.state.first_name,\n        \"last_name\": _this.state.last_name,\n        \"job_title\": _this.state.job_title,\n        \"works_for\": _this.state.works_for,\n        \"selected_topics\": _this.state.selected_topics,\n        \"organization_id\": _this.state.organization_id,\n        \"new_organization\": _this.state.new_organization,\n        \"organization_email\": _this.state.organization_email,\n        \"new_organization_email\": _this.state.new_organization_email,\n        \"personal_email\": _this.state.personal_email,\n        \"work_email\": _this.state.work_email,\n        \"address\": _this.state.address,\n        \"address_line_two\": _this.state.address_line_two,\n        \"city\": _this.state.city,\n        \"state\": _this.state.state,\n        \"country\": _this.state.country,\n        \"zip\": _this.state.zip\n      });\n      button.disabled = true;\n      component.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setTimeout(function (e) {\n          button.disabled = false;\n          var flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            component.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          component.setState({\n            active_tab: '1',\n            email_address: '',\n            phone_number: '',\n            password: '',\n            password_confirm: '',\n            first_name: '',\n            last_name: '',\n            works_for: '',\n            job_title: '',\n            selected_topics: [],\n            organizations: [],\n            organization_id: '',\n            organization_name: '',\n            new_organization: '',\n            organization_email: '',\n            new_organization_email: '',\n            personal_email: '',\n            work_email: '',\n            working: false,\n            error: false\n          }, function () {\n            // Redirect to profile\n            //Router.push('/');\n            var login = document.querySelector('.js-login');\n            login.click();\n            return false;\n          });\n        }, 1000);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleTab\", function (tab) {\n      var controls = document.querySelector('#controls');\n      event.preventDefault();\n\n      if (tab == 2) {\n        var inputEmail = document.querySelector('input[name=\"email_address\"]');\n\n        if (!inputEmail.checkValidity()) {\n          _this.setState({\n            error: {\n              email_address: 'Please add a valid email address.'\n            }\n          });\n\n          inputEmail.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.password.length < 10) {\n          var inputPassword = document.querySelector('input[name=\"password\"]');\n\n          _this.setState({\n            error: {\n              password: 'Minimum of 10 characters.'\n            }\n          });\n\n          inputPassword.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return;\n        }\n\n        if (_this.state.password_confirm !== _this.state.password) {\n          _this.setState({\n            error: {\n              password_confirm: 'Passwords do not match.'\n            }\n          });\n\n          return false;\n        } // Verify that email doesn't exist\n\n\n        var component = _assertThisInitialized(_this);\n\n        var url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/check-email';\n        var json = JSON.stringify({\n          \"email_address\": _this.state.email_address\n        });\n        component.setState({\n          working: true\n        });\n        fetch(url, {\n          method: 'post',\n          body: json,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          var flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            var _component$setState;\n\n            component.setState((_component$setState = {\n              error: data.message\n            }, _defineProperty(_component$setState, \"error\", {\n              email_address: data.message\n            }), _defineProperty(_component$setState, \"working\", false), _component$setState));\n            inputEmail.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"end\",\n              inline: \"nearest\"\n            });\n            return false;\n          } else {\n            component.setState(function (state) {\n              return {\n                active_tab: tab,\n                error: false,\n                working: false\n              };\n            });\n            controls.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"end\",\n              inline: \"nearest\"\n            });\n          }\n        });\n      } //\n\n\n      if (tab == 3) {\n        if (_this.state.first_name.length < 2) {\n          var inputFirstName = document.querySelector('input[name=\"first_name\"]');\n\n          _this.setState({\n            error: {\n              first_name: 'Invalid first name'\n            }\n          });\n\n          inputFirstName.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.last_name.length < 2) {\n          var inputLastName = document.querySelector('input[name=\"last_name\"]');\n\n          _this.setState({\n            error: {\n              last_name: 'Invalid last name'\n            }\n          });\n\n          inputLastName.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.phone_number.length < 7) {\n          var inputPhoneNumber = document.querySelector('input[name=\"phone_number\"]');\n\n          _this.setState({\n            error: {\n              phone_number: 'Invalid phone number'\n            }\n          });\n\n          inputPhoneNumber.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.country.length < 2) {\n          var countryField = document.querySelector('select[name=\"country\"]');\n\n          _this.setState({\n            error: {\n              country: 'Select your country.'\n            }\n          });\n\n          countryField.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.address.length < 2) {\n          var addressField = document.querySelector('input[name=\"address\"]');\n\n          _this.setState({\n            error: {\n              address: 'Include your address'\n            }\n          });\n\n          addressField.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.state == '' || _this.state.state == 0 || _this.state.state == \"0\") {\n          //var stateField = document.querySelector('select[name=\"state\"]');\n          _this.setState({\n            error: {\n              state: 'Select your state.'\n            }\n          }); // stateField.scrollIntoView({\n          // \tbehavior: \"smooth\",\n          // \tblock: \"end\",\n          // \tinline: \"nearest\"\n          // });\n\n\n          return false;\n        }\n\n        if (_this.state.zip.length < 2) {\n          var zipField = document.querySelector('input[name=\"zip\"]');\n\n          _this.setState({\n            error: {\n              zip: 'Include your zip code.'\n            }\n          });\n\n          zipField.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n            inline: \"nearest\"\n          });\n          return false;\n        }\n\n        if (_this.state.selected_topics.length < 1) {\n          _this.setState({\n            error: {\n              selected_topics: 'Please select at least one area of interest.'\n            }\n          });\n\n          return;\n        }\n\n        if (_this.state.email_address.includes('.gov') || _this.state.email_address.includes('.edu') || _this.state.email_address.includes('.mil') || _this.state.email_address.includes('.us')) {\n          _this.setState({\n            work_email: _this.state.email_address\n          });\n        }\n\n        _this.setState(function (state) {\n          return {\n            active_tab: tab,\n            error: false\n          };\n        });\n\n        controls.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n          inline: \"nearest\"\n        });\n      }\n    });\n\n    _this.state = {\n      active_tab: 1,\n      email_address: '',\n      phone_number: '',\n      password: '',\n      password_confirm: '',\n      first_name: '',\n      last_name: '',\n      address: '',\n      address_line_two: '',\n      city: '',\n      state: '',\n      zip: '',\n      country: 'United States',\n      available_states: _this._getStates('United States'),\n      works_for: '',\n      job_title: '',\n      selected_topics: [],\n      organizations: [],\n      organization_id: '',\n      organization_name: '',\n      new_organization: '',\n      organization_email: '',\n      new_organization_email: '',\n      personal_email: '',\n      work_email: '',\n      working: false,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.props.user) {\n                  _context.next = 3;\n                  break;\n                }\n\n                Router.push('/profile');\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var working = this.state.working;\n      var html = document.querySelector('html');\n\n      if (working) {\n        html.classList.add('working');\n      } else {\n        html.classList.remove('working');\n      }\n    }\n  }, {\n    key: \"generateRandomString\",\n    value: function generateRandomString() {\n      return Math.random().toString(15).substring(2, 11) + Math.random().toString(10).substring(2, 10);\n    }\n  }, {\n    key: \"isURL\",\n    value: function isURL(url) {\n      var regexp = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n      return regexp.test(url);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function () {\n      var _handleChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var _this2 = this;\n\n        var name, wordpress, organizations, topic_id, topic_r, topic, index, select;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                name = event.target.getAttribute('name');\n\n                if (!(name == 'email_address')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 5:\n                if (!(name == 'phone_number')) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 9:\n                if (!(name == 'password')) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 13:\n                if (!(name == 'password_confirm')) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 17:\n                if (!(name == 'first_name')) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 21:\n                if (!(name == 'last_name')) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 25:\n                if (!(name == 'country')) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                this.setState({\n                  'available_states': this._getStates(event.target.value)\n                });\n                _context2.next = 74;\n                break;\n\n              case 29:\n                if (!(name == 'state')) {\n                  _context2.next = 33;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 33:\n                if (!(name == 'works_for')) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 37:\n                if (!(name == 'job_title')) {\n                  _context2.next = 41;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value));\n                _context2.next = 74;\n                break;\n\n              case 41:\n                if (!(name == 'organization_name')) {\n                  _context2.next = 53;\n                  break;\n                }\n\n                if (!(event.target.value.length >= 3)) {\n                  _context2.next = 50;\n                  break;\n                }\n\n                wordpress = new WordpressService();\n                _context2.next = 46;\n                return wordpress.searchOrganizations(event.target.value, 10);\n\n              case 46:\n                organizations = _context2.sent;\n                this.setState(function (state) {\n                  return {\n                    organizations: organizations\n                  };\n                });\n                _context2.next = 51;\n                break;\n\n              case 50:\n                this.setState(function (state) {\n                  return {\n                    organizations: []\n                  };\n                });\n\n              case 51:\n                _context2.next = 74;\n                break;\n\n              case 53:\n                if (!(name == 'new_organization')) {\n                  _context2.next = 57;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value), function () {\n                  _this2.setState({\n                    organization_id: '',\n                    organization_email: ''\n                  });\n                });\n                _context2.next = 74;\n                break;\n\n              case 57:\n                if (!(name == 'new_organization_email')) {\n                  _context2.next = 61;\n                  break;\n                }\n\n                this.setState(_defineProperty({}, name, event.target.value), function () {\n                  _this2.setState({\n                    organization_id: '',\n                    organization_email: ''\n                  });\n                });\n                _context2.next = 74;\n                break;\n\n              case 61:\n                if (!(name == 'select_topic')) {\n                  _context2.next = 73;\n                  break;\n                }\n\n                topic_id = event.target.value;\n\n                if (!(topic_id == 0)) {\n                  _context2.next = 65;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 65:\n                topic_r = this.state.selected_topics;\n\n                if (!(this.state.selected_topics.length >= 5)) {\n                  _context2.next = 68;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 68:\n                topic = this.props.topics.find(function (element) {\n                  return element.term_id == topic_id;\n                });\n                index = topic_r.findIndex(function (x) {\n                  return x == topic_id;\n                });\n\n                if (index === -1) {\n                  topic_r.push(topic);\n                  this.setState({\n                    'selected_topics': topic_r\n                  });\n                  select = document.querySelector('select[name=\"select_topic\"]');\n                  select.selectedIndex = 0;\n                }\n\n                _context2.next = 74;\n                break;\n\n              case 73:\n                this.setState(_defineProperty({}, name, event.target.value), function () {});\n\n              case 74:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleChange(_x) {\n        return _handleChange.apply(this, arguments);\n      }\n\n      return handleChange;\n    }()\n  }, {\n    key: \"_renderError\",\n    value: function _renderError(field) {\n      if (this.state.error) {\n        var flat = JSON.stringify(this.state.error);\n\n        if (flat.includes('email_address')) {\n          if (field == 'email_address') {\n            return __jsx(React.Fragment, null, __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.email_address));\n          }\n        }\n\n        if (flat.includes('phone_number')) {\n          if (field == 'phone_number') {\n            return __jsx(React.Fragment, null, __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.phone_number));\n          }\n        }\n\n        if (flat.includes('password')) {\n          if (field == 'password') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.password);\n          }\n        }\n\n        if (flat.includes('password_confirm')) {\n          if (field == 'password_confirm') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.password_confirm);\n          }\n        }\n\n        if (flat.includes('first_name')) {\n          if (field == 'first_name') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.first_name);\n          }\n        }\n\n        if (flat.includes('last_name')) {\n          if (field == 'last_name') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.last_name);\n          }\n        }\n\n        if (flat.includes('address')) {\n          if (field == 'address') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.address);\n          }\n        }\n\n        if (flat.includes('country')) {\n          if (field == 'country') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.country);\n          }\n        }\n\n        if (flat.includes('state')) {\n          if (field == 'state') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.state);\n          }\n        }\n\n        if (flat.includes('zip')) {\n          if (field == 'zip') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.zip);\n          }\n        }\n\n        if (flat.includes('job_title')) {\n          if (field == 'job_title') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.job_title);\n          }\n        }\n\n        if (flat.includes('works_for')) {\n          if (field == 'works_for') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.works_for);\n          }\n        }\n\n        if (flat.includes('selected_topics')) {\n          if (field == 'selected_topics') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.selected_topics);\n          }\n        }\n\n        if (flat.includes('registration_error')) {\n          if (field == 'registration') {\n            return __jsx(\"span\", {\n              className: \"\".concat(registerStyles.errorText)\n            }, this.state.error.selected_topics);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getStates\",\n    value: function _getStates(name) {\n      var _require = require('../components/countries.json'),\n          countries = _require.countries;\n\n      var index = countries.findIndex(function (country) {\n        return country.country == name;\n      });\n      return countries[index].states;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var display_name = this.props.display_name;\n      var user = this.props.user;\n      var topics = this.props.topics;\n\n      var _require2 = require('../components/countries.json'),\n          countries = _require2.countries;\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n        key: \"page-title\"\n      }, \"Register\"), __jsx(\"meta\", {\n        charset: \"utf-8\"\n      }), __jsx(\"link\", {\n        rel: \"apple-touch-icon\",\n        sizes: \"180x180\",\n        href: \"/apple-touch-icon.png\"\n      }), __jsx(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"32x32\",\n        href: \"/favicon-32x32.png\"\n      }), __jsx(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"16x16\",\n        href: \"/favicon-16x16.png\"\n      }), __jsx(\"meta\", {\n        name: \"msapplication-TileImage\",\n        content: \"/favicon-270x270.png\"\n      }), __jsx(\"meta\", {\n        name: \"msapplication-TileColor\",\n        content: \"#ffffff\"\n      }), __jsx(\"link\", {\n        rel: \"manifest\",\n        href: \"/site.webmanifest\"\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"Register\",\n        key: \"og-title\"\n      }), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"\",\n        key: \"description\"\n      }), __jsx(\"meta\", {\n        property: \"og:locale\",\n        content: \"en_US\",\n        key: \"og-locale\"\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"Register\",\n        key: \"og-title\"\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: \"\",\n        key: \"og-description\"\n      }), __jsx(\"meta\", {\n        property: \"og:site_name\",\n        content: \"GovWhitePapers\"\n      })), __jsx(Header, _extends({}, user, {\n        display_name: display_name\n      })), __jsx(\"div\", {\n        className: \"row \".concat(registerStyles.pageHeader, \" text-center\")\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"h1\", null, \"Welcome\"), __jsx(\"img\", {\n        className: registerStyles.hr,\n        src: \"/images/sep.svg\",\n        alt: \"\"\n      }), __jsx(\"p\", null, \"Enter your information below or log in with a social account.\"))), __jsx(\"div\", {\n        className: \"row \".concat(registerStyles.pageContent)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"div\", {\n        id: \"controls\",\n        className: registerStyles.controls\n      }, __jsx(\"ul\", null, __jsx(\"li\", {\n        className: registerStyles.active,\n        onClick: function onClick() {\n          _this3._toggleTab(1);\n        }\n      }, __jsx(\"div\", {\n        className: registerStyles.icon\n      }, this._renderControlIcon(1)), __jsx(\"span\", null, \"Account\")), __jsx(\"li\", {\n        onClick: function onClick() {\n          _this3._toggleTab(2);\n        }\n      }, __jsx(\"div\", {\n        className: registerStyles.icon\n      }, this._renderControlIcon(2)), __jsx(\"span\", null, \"Personal\")), __jsx(\"li\", {\n        onClick: function onClick() {\n          _this3._toggleTab(3);\n        }\n      }, __jsx(\"div\", {\n        className: registerStyles.icon\n      }, this._renderControlIcon(3)), __jsx(\"span\", null, \"Organization\")))), __jsx(\"div\", {\n        className: registerStyles.tabs\n      }, __jsx(\"div\", {\n        className: this._renderTabClass(1)\n      }, __jsx(\"div\", {\n        className: \"\".concat(registerStyles.form)\n      }, __jsx(\"div\", {\n        className: \"row \".concat(registerStyles.row)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"div\", {\n        className: registerStyles.account\n      }, __jsx(\"label\", null, \"Email \", this._renderError('email_address'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"email_address\",\n        value: this.state.email_address,\n        type: \"email\",\n        placeholder: \"Type your email address\",\n        required: true\n      })), __jsx(\"label\", null, \"Password \", this._renderError('password'), __jsx(\"span\", {\n        className: registerStyles.subLabel\n      }, __jsx(\"span\", {\n        className: registerStyles.dot\n      }, \"\\xB7\"), \" minimum of 10 characters\"), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"password\",\n        value: this.state.password,\n        type: \"password\",\n        placeholder: \"Type your password\",\n        required: true\n      })), __jsx(\"label\", null, \"Confim Password \", this._renderError('password_confirm'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"password_confirm\",\n        value: this.state.password_confirm,\n        type: \"password\",\n        placeholder: \"Verify your password\",\n        required: true\n      }))), __jsx(\"div\", {\n        className: registerStyles.nav\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          _this3._toggleTab(2);\n        },\n        className: \"button \".concat(registerStyles.button)\n      }, \"Continue\")), __jsx(\"div\", {\n        className: this._renderSocialWrapClass()\n      }, __jsx(\"div\", {\n        className: registerStyles.sep\n      }, __jsx(\"img\", {\n        src: \"/images/continue-with.png\",\n        alt: \"\"\n      })), __jsx(\"div\", {\n        className: \"\".concat(registerStyles.socialBlock)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns text-center\"\n      }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n        \"data-close-modal\": true,\n        className: registerStyles.google\n      }, __jsx(\"img\", {\n        \"data-close-modal\": true,\n        className: registerStyles.social,\n        src: \"/images/login-google.png\",\n        alt: \"\"\n      }))), __jsx(\"li\", null, __jsx(\"a\", {\n        \"data-close-modal\": true,\n        className: registerStyles.fb\n      }, __jsx(\"img\", {\n        \"data-close-modal\": true,\n        className: registerStyles.social,\n        src: \"/images/login-fb.png\",\n        alt: \"\"\n      }))), __jsx(\"li\", null, __jsx(\"a\", {\n        \"data-close-modal\": true,\n        className: registerStyles.linkedin\n      }, __jsx(\"img\", {\n        \"data-close-modal\": true,\n        className: registerStyles.social,\n        src: \"/images/login-linkedin.png\",\n        alt: \"\"\n      }))))))), __jsx(\"div\", {\n        className: \"\".concat(registerStyles.signUp)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns text-center\"\n      }, __jsx(\"h5\", null, __jsx(\"a\", {\n        onClick: function onClick() {\n          _this3._openLogin();\n        }\n      }, __jsx(\"span\", {\n        \"data-close-modal\": true\n      }, \"Already have an account?\"), \" Log In \", __jsx(\"img\", {\n        className: registerStyles.linkArrow,\n        \"data-close-modal\": true,\n        src: \"/images/right-arrow-blue.svg\",\n        alt: \"\"\n      }))))))))), __jsx(\"div\", {\n        className: this._renderTabClass(2)\n      }, __jsx(\"div\", {\n        className: \"\".concat(registerStyles.form)\n      }, __jsx(\"div\", {\n        className: \"row \".concat(registerStyles.row)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"div\", {\n        className: registerStyles.personal\n      }, __jsx(\"label\", null, \"First Name \", this._renderError('first_name'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"first_name\",\n        value: this.state.first_name,\n        type: \"text\",\n        placeholder: \"Type your first name\"\n      })), __jsx(\"label\", null, \"Last Name \", this._renderError('last_name'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"last_name\",\n        value: this.state.last_name,\n        type: \"text\",\n        placeholder: \"Type your last name\"\n      })), __jsx(\"label\", null, \"Phone \", this._renderError('phone_number'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"phone_number\",\n        value: this.state.phone_number,\n        type: \"tel\",\n        placeholder: \"Type your phone number\",\n        required: true\n      })), __jsx(\"div\", {\n        className: registerStyles.country\n      }, __jsx(\"label\", null, \"Country \", this._renderError('country'), __jsx(\"select\", {\n        onChange: this.handleChange,\n        autoComplete: this.generateRandomString(),\n        name: \"country\"\n      }, __jsx(\"option\", {\n        value: \"United States\"\n      }, \"United States\"), countries.map(function (country) {\n        return __jsx(\"option\", {\n          key: country.country,\n          value: country.country\n        }, decodeHTML(country.country));\n      })))), __jsx(\"label\", null, \"Address \", this._renderError('address'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"address\",\n        value: this.state.address,\n        type: \"text\",\n        placeholder: \"Type your street address\"\n      })), __jsx(\"label\", null, \"Address Line 2 \", this._renderError('address_line_two'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"address_line_two\",\n        value: this.state.address_line_two,\n        type: \"text\",\n        placeholder: \"(optional)\"\n      })), __jsx(\"label\", null, \"City \", this._renderError('city'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"city\",\n        value: this.state.city,\n        type: \"text\",\n        placeholder: \"City\"\n      })), __jsx(\"div\", {\n        className: registerStyles.state\n      }, __jsx(\"label\", null, \"State \", this._renderError('state'), __jsx(\"select\", {\n        onChange: this.handleChange,\n        autoComplete: this.generateRandomString(),\n        name: \"state\"\n      }, __jsx(\"option\", {\n        value: \"0\"\n      }, \"Select Your State\"), this.state.available_states.map(function (state) {\n        return __jsx(\"option\", {\n          key: state,\n          value: state\n        }, decodeHTML(state));\n      })))), __jsx(\"label\", null, \"Zip \", this._renderError('zip'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"zip\",\n        value: this.state.zip,\n        type: \"text\",\n        placeholder: \"Zip Code\"\n      })), __jsx(\"div\", {\n        className: registerStyles.topics\n      }, __jsx(\"label\", null, \"Areas of Interest \", this._renderError('selected_topics'), __jsx(\"span\", {\n        className: registerStyles.subLabel\n      }, __jsx(\"span\", {\n        className: registerStyles.dot\n      }, \"\\xB7\"), \" up to 5\"), __jsx(\"select\", {\n        onChange: this.handleChange,\n        name: \"select_topic\"\n      }, __jsx(\"option\", {\n        value: \"0\"\n      }, \"Select Interests\"), topics.map(function (topic) {\n        return __jsx(\"option\", {\n          key: topic.term_id,\n          value: topic.term_id\n        }, decodeHTML(topic.name));\n      }))), this._renderSelectedTopics())), __jsx(\"div\", {\n        className: registerStyles.nav\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          _this3._toggleTab(3);\n        },\n        className: \"button \".concat(registerStyles.button)\n      }, \"Continue\")))))), __jsx(\"div\", {\n        className: this._renderTabClass(3)\n      }, __jsx(\"div\", {\n        className: \"\".concat(registerStyles.form)\n      }, __jsx(\"div\", {\n        className: \"row \".concat(registerStyles.row)\n      }, __jsx(\"div\", {\n        className: \"small-12 columns\"\n      }, __jsx(\"div\", {\n        className: registerStyles.worksFor\n      }, __jsx(\"label\", null, \"I work for \", this._renderError('works_for'), __jsx(\"select\", {\n        onChange: this.handleChange,\n        autoComplete: this.generateRandomString(),\n        name: \"works_for\"\n      }, __jsx(\"option\", {\n        value: \"0\"\n      }, \"Select who you work for\"), __jsx(\"option\", {\n        value: \"federal_government\"\n      }, \"Federal Government\"), __jsx(\"option\", {\n        value: \"military\"\n      }, \"Military\"), __jsx(\"option\", {\n        value: \"state_and_local\"\n      }, \"State and Local Government\"), __jsx(\"option\", {\n        value: \"education\"\n      }, \"Education\"), __jsx(\"option\", {\n        value: \"government_contractor\"\n      }, \"Government Contractor\"), __jsx(\"option\", {\n        value: \"private_industry\"\n      }, \"Private Industry\")))), __jsx(\"label\", null, \"Job Title \", this._renderError('job_title'), __jsx(\"input\", {\n        onChange: this.handleChange,\n        name: \"job_title\",\n        value: this.state.job_title,\n        type: \"text\",\n        placeholder: \"Type your job title\"\n      })), __jsx(\"div\", {\n        className: registerStyles.organization\n      }, this._renderOrganizationSelect()), __jsx(\"div\", {\n        className: registerStyles.nav\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          _this3._handleRegistration();\n        },\n        className: \"button js-register \".concat(registerStyles.button)\n      }, \"Complete Registration\")), this._renderError('registration')))))))), __jsx(Footer, null));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport var __N_SSG = true;\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}