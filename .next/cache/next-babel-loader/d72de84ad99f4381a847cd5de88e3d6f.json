{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport loginModalStyles from '../public/styles/modules/components/loginmodal.module.css';\nimport Link from 'next/link';\nimport Cookies from 'js-cookie';\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_handleEscape\", e => {\n      if (e.which == 27) {\n        this.props.toggle();\n      }\n    });\n\n    _defineProperty(this, \"_handleClick\", e => {\n      e.preventDefault();\n\n      if (e.target.hasAttribute('data-close-modal')) {\n        this.props.toggle();\n      }\n    });\n\n    _defineProperty(this, \"_forgotPassword\", () => {\n      this.props.toggle();\n    });\n\n    _defineProperty(this, \"_processLogin\", () => {\n      let button, govButton, json, url, login, emailField, passField;\n      emailField = document.querySelector('input[name=\"email\"]');\n      passField = document.querySelector('input[name=\"pass\"]');\n\n      if (!emailField.checkValidity()) {\n        emailField.classList.add('invalid');\n        return false;\n      } else {\n        emailField.classList.remove('invalid');\n      }\n\n      if (!passField.checkValidity()) {\n        passField.classList.add('invalid');\n        return false;\n      } else {\n        passField.classList.remove('invalid');\n      }\n\n      button = document.querySelector('.js-login');\n      govButton = document.querySelector('.js-login-govevents');\n      login = this;\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/manual-user-login';\n      json = JSON.stringify({\n        \"email\": this.state.email,\n        \"pass\": this.state.pass\n      });\n      button.disabled = true;\n      govButton.disabled = true;\n      login.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setTimeout(function (e) {\n          button.disabled = false;\n          govButton.disabled = false;\n          let flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            login.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          Cookies.set('user', JSON.stringify(data));\n          login.setState(() => ({\n            error: '',\n            working: false,\n            email: '',\n            pass: ''\n          }), () => {\n            login.props.toggle();\n            window.location.reload();\n          });\n        }, 1000);\n      });\n    });\n\n    _defineProperty(this, \"_processGovEventsLogin\", () => {\n      let button, govButton, json, url, login, emailField, passField;\n      emailField = document.querySelector('input[name=\"email\"]');\n      passField = document.querySelector('input[name=\"pass\"]');\n\n      if (!emailField.checkValidity()) {\n        emailField.classList.add('invalid');\n        return false;\n      } else {\n        emailField.classList.remove('invalid');\n      }\n\n      if (!passField.checkValidity()) {\n        passField.classList.add('invalid');\n        return false;\n      } else {\n        passField.classList.remove('invalid');\n      }\n\n      button = document.querySelector('.js-login');\n      govButton = document.querySelector('.js-login-govevents');\n      login = this;\n      url = 'https://gwpadmin.codewrangler.io/api/gwp/v1/govevents-user-login';\n      json = JSON.stringify({\n        \"email\": this.state.email,\n        \"pass\": this.state.pass\n      });\n      button.disabled = true;\n      govButton.disabled = true;\n      login.setState({\n        working: true\n      });\n      fetch(url, {\n        method: 'post',\n        body: json,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        setTimeout(function (e) {\n          button.disabled = false;\n          govButton.disabled = false;\n          let flat = JSON.stringify(data);\n\n          if (flat.includes('error')) {\n            login.setState({\n              error: data.message,\n              working: false\n            });\n            return false;\n          }\n\n          Cookies.set('user', JSON.stringify(data));\n          login.setState(() => ({\n            error: '',\n            working: false,\n            email: '',\n            pass: ''\n          }), () => {\n            login.props.toggle();\n            window.location.reload();\n          });\n        }, 1000);\n      });\n    });\n\n    _defineProperty(this, \"_renderModalClass\", () => {\n      const {\n        open\n      } = this.props;\n\n      if (open) {\n        return `${loginModalStyles.wrap} ${loginModalStyles.open}`;\n      } else {\n        return `${loginModalStyles.wrap}`;\n      }\n    });\n\n    this.state = {\n      email: '',\n      pass: '',\n      error: '',\n      working: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let name = event.target.getAttribute('name');\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      open\n    } = this.props;\n    const {\n      working\n    } = this.state;\n    let html = document.querySelector('html');\n\n    if (open) {\n      window.addEventListener('keydown', this._handleEscape);\n      window.addEventListener('click', this._handleClick);\n      html.classList.add('active-modal');\n    } else {\n      window.removeEventListener('keydown', this._handleEscape);\n      window.removeEventListener('click', this._handleClick);\n      html.classList.remove('active-modal');\n    }\n\n    if (working) {\n      html.classList.add('working');\n    } else {\n      html.classList.remove('working');\n    }\n  }\n\n  render() {\n    const {\n      email,\n      pass,\n      error\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: this._renderModalClass()\n    }, __jsx(\"div\", {\n      className: `row ${loginModalStyles.header}`\n    }, __jsx(\"div\", {\n      className: \"small-6 columns\"\n    }, __jsx(\"img\", {\n      className: loginModalStyles.logo,\n      src: \"/images/logo.svg\",\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"small-6 columns text-right\"\n    }, __jsx(\"button\", {\n      className: loginModalStyles.close,\n      onClick: e => {\n        this.props.toggle();\n      }\n    }, __jsx(\"img\", {\n      src: \"/images/close.svg\",\n      alt: \"\"\n    })))), __jsx(\"div\", {\n      className: `${loginModalStyles.login}`\n    }, __jsx(\"div\", {\n      className: \"row text-center\"\n    }, __jsx(\"div\", {\n      className: \"small-12 columns\"\n    }, __jsx(\"h2\", null, \"Welcome\"), __jsx(\"img\", {\n      className: loginModalStyles.hr,\n      src: \"/images/sep.svg\",\n      alt: \"\"\n    }), __jsx(\"p\", null, \"Sign in to access GovWhitePapers.\"))), __jsx(\"div\", {\n      className: `${loginModalStyles.form}`\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"small-12 columns\"\n    }, __jsx(\"form\", null, __jsx(\"label\", null, \"Email Address\", __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      placeholder: \"Type your email\",\n      required: true\n    })), __jsx(\"label\", null, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      onChange: this.handleChange,\n      value: this.state.pass,\n      placeholder: \"Type your password\",\n      required: true\n    })), __jsx(\"div\", {\n      className: loginModalStyles.error\n    }, __jsx(\"span\", null, this.state.error)), __jsx(Link, {\n      href: \"/password-reset\"\n    }, __jsx(\"a\", {\n      onClick: this._forgotPassword,\n      className: loginModalStyles.forgot\n    }, \"Forgot password?\")), __jsx(\"div\", {\n      className: `row ${loginModalStyles.signin}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(\"input\", {\n      onClick: this._processLogin,\n      type: \"submit\",\n      className: \"js-login button\",\n      value: \"Log In\"\n    }))), __jsx(\"div\", {\n      className: `row ${loginModalStyles.signinGovEvents}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(\"button\", {\n      onClick: this._processGovEventsLogin,\n      type: \"submit\",\n      className: \"js-login-govevents button\"\n    }, __jsx(\"img\", {\n      src: \"/images/govevents-logo.png\",\n      alt: \"\"\n    }), \" \", __jsx(\"span\", null, \"Log In with GovEvents\")))))))), __jsx(\"div\", {\n      className: `row ${loginModalStyles.sep}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(\"img\", {\n      src: \"/images/continue-with.png\",\n      alt: \"\"\n    }))), __jsx(\"div\", {\n      className: `row ${loginModalStyles.socialBlock}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.google\n    }, __jsx(\"img\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.social,\n      src: \"/images/login-google.png\",\n      alt: \"\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.fb\n    }, __jsx(\"img\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.social,\n      src: \"/images/login-fb.png\",\n      alt: \"\"\n    }))), __jsx(\"li\", null, __jsx(\"a\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.linkedin\n    }, __jsx(\"img\", {\n      \"data-close-modal\": true,\n      className: loginModalStyles.social,\n      src: \"/images/login-linkedin.png\",\n      alt: \"\"\n    })))))), __jsx(\"div\", {\n      className: `row ${loginModalStyles.signUp}`\n    }, __jsx(\"div\", {\n      className: \"small-12 columns text-center\"\n    }, __jsx(Link, {\n      href: \"/register\"\n    }, __jsx(\"h5\", null, __jsx(\"a\", {\n      \"data-close-modal\": true\n    }, __jsx(\"span\", {\n      \"data-close-modal\": true\n    }, \"Don't have an account?\"), \" Sign Up \", __jsx(\"img\", {\n      className: loginModalStyles.linkArrow,\n      \"data-close-modal\": true,\n      src: \"/images/right-arrow-blue.svg\",\n      alt: \"\"\n    })))))))));\n  }\n\n}\n\nexport default LoginModal;","map":null,"metadata":{},"sourceType":"module"}