{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../public/styles/fonts.css';\nimport '../public/styles/foundation.css';\nimport '../public/styles/global.css';\nimport '../public/styles/datepicker.css';\nimport '../public/styles/ads.css';\nimport Cookies from 'js-cookie';\nimport App from \"next/app\";\nimport WordpressService from '../services/wordpress';\n\nclass GWP extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this._fetchToken(),\n      display_name: '',\n      organization_id: false\n    };\n    this.checkIE();\n  }\n\n  checkIE() {\n    if (false) {\n      var ua = window.navigator.userAgent;\n      var isIE = /MSIE|Edge|Trident/.test(ua);\n\n      if (isIE) {\n        document.querySelector('#ie-killa').classList.add('show');\n        document.querySelector('html').classList.add('ie-killa');\n      }\n    }\n  }\n\n  componentDidUpdate() {}\n\n  async componentDidMount() {\n    const access_token = this._fetchToken();\n\n    if (access_token) {\n      const wordpress = new WordpressService();\n      const user = await wordpress.getUser(access_token.access_token);\n      console.log('app user');\n      console.log(user);\n      this.setState(state => ({\n        display_name: user.first_name + ' ' + user.last_name,\n        organization_id: user.organization_id,\n        organization_email_verified: user.organization_email_verified,\n        organization_email_mismatch: user.organization_email_mismatch\n      }));\n    }\n  }\n\n  _fetchToken() {\n    let c = Cookies.get('user');\n\n    if (c) {\n      let d = c.replace('path=/', '');\n      const token = JSON.parse(d);\n      return token;\n    } // if (process.browser) {\n    // \tconst token = await window.localStorage.getItem('user');\n    // \treturn token;\n    // } else {\n    // \treturn false;\n    // }\n\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, this.state));\n  }\n\n} // This default export is required in a new `pages/_app.js` file.\n\n\nexport default GWP;","map":null,"metadata":{},"sourceType":"module"}